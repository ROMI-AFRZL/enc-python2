#Encrypt By Romi Afrizal (https://github.com/ROMI-AFRZL)

import base64
exec(base64.b64decode('#Encrypt By Romi Afrizal (https://github.com/ROMI-AFRZL)

import base64
exec(base64.b64decode('I0VuY3J5cHQgQnkgUm9taSBBZnJpemFsIChodHRwczovL2dpdGh1Yi5jb20vUk9NSS1BRlJaTCkKCmltcG9ydCBiYXNlNjQKZXhlYyhiYXNlNjQuYjY0ZGVjb2RlKCdJMFZ1WTNKNWNIUWdRbmtnVW05dGFTQkJabkpwZW1Gc0lDaG9kSFJ3Y3pvdkwyZHBkR2gxWWk1amIyMHZVazlOU1MxQlJsSmFUQ2tLQ21sdGNHOXlkQ0JpWVhObE5qUUtaWGhsWXloaVlYTmxOalF1WWpZMFpHVmpiMlJsS0NkSk1GWjFXVE5LTldOSVVXZFJibXRuVlcwNWRHRlRRa0phYmtwd1pXMUdjMGxEYUc5a1NGSjNZM3B2ZGt3eVpIQmtSMmd4V1drMWFtSXlNSFpWYXpsT1UxTXhRbEpzU21GVVEydExRMjFzZEdOSE9YbGtRMEpwV1ZoT2JFNXFVVXRhV0doc1dYbG9hVmxZVG14T2FsRjFXV3BaTUZwSFZtcGlNbEpzUzBOa1NrMUdXakZYVkU1TFRsZE9TVlZYWkZKaWJYUnVWbGN3TldSSFJsUlJhMHBoWW10d2QxcFhNVWRqTUd4RVlVYzVhMU5HU2pOWk0zQjJaR3QzZVZwSVFtdFNNbWQ0VjFkck1XRnRTWGxOU0ZwV1lYcHNUMVV4VFhoUmJFcHpVMjFHVlZFeWRFeFJNakZ6WkVkT1NFOVliR3RSTUVvd1YxWm9TMlZ0UmtoU2JrNUVZbFpaTUZkc1pFNWlNa3BZVW01c2FrMXRhRzlaYTAweFl6SkplVkp0ZEdwbFYyUjFWMVJHTkU1Rk1VVlJiVTVzVWtWR00xZEZhRzVrTURGSFpVUlNUbEpGU21wYVZWSkNaREZvU1ZvelpFNVNibWN3VkZWU1Exa3lWa1ZSV0dSWlUwZGtNMVJVUmpST1JURkZVVzFPYkZKRlJqTlhSV2h1WkRBeFJsRnRUbXhTUlVZelYwVm9ibVF3TVVkbFJGSk9Va1ZLTmxOV1dqUk9SVEZGVVcxT2JGSkZSak5YUldodVpEQXhTRlZ0VG14U1JVWXpWMFZvYm1Rd01VaFZiVTVzVWtWR05GZEZhRzVrTURGSVpVZE9iRkpGUmpOWFJXaHVaREF4UjJOSFRteFNSVVl6VjBWb2JtUXdNVWhXYlU1c1VrVkdNMWRGYUc1a01ERklZMGRPYkZKRlJqUlhSV2h1WkRBeFNGVnRUbXhTUlVZMVYwVm9ibVF3TVVkbFJGSlFVa1UxYWxwVlVrSmxSbWhKV2pOa1RsSXhTbXBhVlZKQ1pVWm9TVm96WkU1U2JtY3dWRlZTVTFac2NFZGxSRkpPVWtWYWFscFZVa0prTVZZMVlVZE9iRkpGUmpaWFJXaHVaREF4UjJWRVVrNVNSVXBxV2xWU1FtUXlSbGRsUkZKaFlsWndhbHBWWkdGaVZtaEpZVWN4WVdKSVp6QlhiVEZoVkRKTmVsTnRUbXhTUlZwd1YwVm9ibVF3TVVkbFJGSk9Va1ZLY1ZkRmFHNWtNREZIWlVSU1RsSkZTbXBhVlZKQ1pERm9TVm96WkU1U2JtY3dWRlZTUTFreVZrVlJXR1JaVTBka00xUlZXalJPUlRGRlVXMU9iRkpGUlhkWFJXaHVaREF4UjJWRVVrNVNSVXBxV2xWU1FtUXhSa2RsUkZKT1VrVkthbHBWVWtKa01XaEpXak5rVGxORk5XcGFWV1JLWld4b1NFNVhUbXhTUlVZelYwVm9ibVF3TVVoVmJVNXNVa1ZHTTFkRmFHNWtNREZJVlcxT2JGSkZSalJYUldodVpEQXhTR1ZIVG14U1JVWXpWMFZvYm1Rd01VZGpSMDVzVWtWR00xZEZhRzVrTURGSVZXMU9iRkpGUmpOWFJXaHVaREF4U0ZWdFRteFNSVVkwVjBWb2JtUXdNVWhsUjA1c1VrVkdORmRGYUc1a01ERkhZMGRPYkZKRlJqUlhSV2h1WkRBeFNGVnRUbXhTUlVZelYwVm9ibVF3TVVoVmJVNXNVa1ZHTkZkRmFHNWtNREZJWlVkT2JGSkZSalZYUldodVpEQXhSMk5IVG14U1JVWTFWMFZvYm1Rd01VaFZiVTVzVWtWR00xZEZhRzVrTURGSVZXMU9iRkpGUmpSWFJXaHVaREF4U0dWSFRteFNSVVkyVjBWb2JtUXdNVWRqUjA1c1VrVkdObGRGYUc1a01ERklWVzFPYkZKRlJqTlhSV2h1WkRBeFNGVnRUbXhTUlVZMFYwVm9ibVF3TVVobFIwNXNVa1ZGZDFkRmFHNWtNREZIWTBkT2JGSkZSWGRYUldodVpEQXhTRlZ0VG14U1JVWXpWMFZvYm1Rd01VaFZiVTVzVWtWR05GZEZhRzVrTURGSVpVZE9iRkpGUlhoWFJXaHVaREF4UjJOSFRteFNSVVY0VjBWb2JtUXdNVWhWYlU1c1VrVkdNMWRGYUc1a01ERklWVzFPYkZKRlJqUlhSV2h1WkRBeFNHVkhUbXhTUlVWNVYwVm9ibVF3TVVkalIwNXNVa1ZGZVZkRmFHNWtNREZJVlcxT2JGSkZSak5YUldodVpEQXhTRlZ0VG14U1JVWTBWMFZvYm1Rd01VaGxSMDVzVWtWRmVsZEZhRzVrTURGSFkwZE9iRkpGUlhwWFJXaHVaREF4U0ZWdFRteFNSVVkxVjBWb2JtUXdNVWRqUjA1c1VrVkZNRmRGYUc1a01ERklWVzFPYkZKRlJqWlhSV2h1WkRBeFIyTkhUbXRTYm1jd1ZGVlNRMkV4YUVsYU0yUlBVbTVuTUZSVlVrTlpWbWhJVGxkT2JGSkZSak5YYTFvMFRrVXhSVlp0VG14U1JVWXpWako0TkU1Rk1VaFRiVTVzVWtWR00xZHJXalJPUlRGRlYyMU9iRkpGUmpOV01uZzBUa1V4U0ZSdFRteFNSVVl6VjJ0YU5FNUZNVVZhUjA1c1VrVkdNMVl5ZURSbFZtaEpXak5rVGxJeFNtcGFWVkpDVGtab1NWb3paRTVTYm1jd1ZEQlNVMWt5VmtWUldHUlpVMGRrTTFSVlduZFpNbFpGVVcxNFdWTkhaRE5VVldSVFdUSlNSMlZFVWs1U1JVcHFXbFZTYmsxR2FFbGFNMlJPVW01bk1GUlZVa05aVm1oSldqTmtZV0pJWnpCVVZWSkRZVEZvU0U1WFRteFNSVVl6VmpKNE5FNUZNVlZSYlU1c1VrVkdNMWRyV2pST1JURklVMjFPYkZKRlJqTldNbmcwVGtVeFZWSnRUbXhTUlVZelYyeGFORTVGTVVWUmJVNXNVa1ZHTTFsWGVEUk9SVEZWVTIxT2JGSkZSak5YYTFvMFRrVXhTRlJ0VG14U1JVWXpWMFZvYms1Rk1IaGxSRkpPVWtWYWFscFZVa0prTVdoSldqTmtUbFl4V21wYVZWSkNaREZvU1ZvelpFNVNNMEpxV2xWU1JtVldhRWxhTTJST1VqRkthbGt5ZURST1JURkZVVzFPYkZKSFpEWlhSV2h1WkRBeFYyVkVVazVTUlVwcVdsVlNRbVZHY0ZkbFJGSk9Wa1ZLYWxwVlVrSmtNVWwzWVVkNFdWTkhaRE5YYkZvMFRrVXhSVkZ0ZUZsVFIyUTBWRlphTkU1Rk1VVlJiVTVzVWtka05sZEZhRzVrTURGWFpVUlNUbEpGU21wYVZWSkNaVVp3VjJWRVVrNVdSVFZxV2xWU1FtUXhjRmRsUkVKWlUwZGtNMVJWWkZOWk1sWkZVVzE0V1ZOSFpETlVWVm8wVGtVeFZWcEhlRmxUUjJRelZEQmFORTVGTVVWUmJVNXNVa1ZWZWxkcldqUk9SVEZJVjIxT2JGSkZSak5YUldodVpVVTBlVlp0VG1saVNHY3dWRlZTUTFreVZrVlNWRTVaVTBkak1GUlVSalJPUlRGRlVtMU9iRkpGUmpOV01uZzBUa1V4VlZWdFRteFNSVVl6VjJ4YU5FNUZNVlZWYlU1c1VrVkdNMWRyV2pST1JURlZVVzFPYkZKRlJqTlpWRVkwVGtVeFJWTnRUbXhTUlVZeldYcEdORTVHY0hSWGJVNXNVa1ZHTTFkc1dqUk9SVEZWVlcxT2JGSkZSak5YYTFvMFRrVXhWVkp0VG14U1JVWXpXVlJHTkU1Rk1VVlRiVTVzVWtWR00xa3llRFJPUm5CeFlrZE9iRkpGUmpSWGJGbzBUa1V4VlZSdFRteFNSVVl6VjJ4YU5HVldhRWxhTTJST1VqRkthbHBWVWtabFZtaEpXak5rVGxKdVp6QlVWbEpyWWtab1NWb3paRkJTYm1jd1ZGVlNRMWt5VmtWU1ZFNWhVbTVuTUZSVlpHRlpNbFpGVVZoa1dWTkhaRFJVYWtwWFdUSktjMlZFVWs1U1JVcHFXbFZTUmsweGFFbGFlbEpPVFZobk1GUlZVa2RaTWxaRlVWaGtXR0pJWnpCVVZsSlhXVEpXUlZGWVpHRldibWN3VkZaU1Qxa3lWa1ZSV0dSaFZtNW9OVmRGYUc1a01ERklWVzFPYkZKRlZqWlhSV2h1WkRBeFIyVkVVazVXUjFKelYwVm9ibVF3T1VkbFJGSk9Va1ZLYWxwVlVrWk5NWEJIWlVSU1RsSXhjR3BhVlZKQ1pERm9TVm96YUU5TmJGcHFXVzE0TkU1Rk1VVlJiVTVzVWtWVmVsZEZhRzVPUlRCNFpVUlNUbEpGV21wYVZWSkNaREZrYzJWRVVrNVdSbkJxV2xWU1FtUXhjRmRsUkZKT1VqRmFhbHBWVWtKa01YQlhaVWhXV1ZOSFpETlVWV1JUV1RKV1JWSlVRbGxUUjJRelZGVmFORTVGTVZWYVIwNXNVa2RrTmxkRmFHNWtNREZYWlVSU1RsSkZTbXBhVlZKQ1pVWndWMlZFVWs1V1IxSnFXbFZTUW1ReGNGZGxSRkpPVmtaYWFscFZVa0prTVdoSlducFNUazFZWnpCVVZWSkhXVEpXUlZGWVpHaGlTR2N3VkZaU2Ixa3lWa1ZSV0dSWlUwZGpNRlJVUmpST1JURkZVVzFPYkZKRlJqTldNbmcwVGtVeFZXSkhUbXhTUlVZelYyeGFORTVGTVZoU2JVNXNVa1ZHTTFkc1dqUk9SVEZWWWtkT2JGSkZSak5YYTFvMFRrVXhWVlp0VG14U1JVWXpWMnRhTkU1Rk1WVlhiVTVzVWtWR00xZEZhRzVPUlRCNFpVUlNUbEpGTldwYVZWSkNaREZrYzJWRVVrNVdNSEJxV2xWU1FtUXhjRmRsUkZKT1VrWkthbHBWVWtKa01rWnpaVVJTVGxZd05XcGFWVkpDWkRGd1YyVkVVazVXTUhCcVdsVlNRbVF4YUVsYWVsSk9UVmhuTUZSVlVrZFpNbFpGVVZoa1dHSklaekJVVm1SVFdUSldSVkZZWkdGV2JtY3dWRlprVjFreVZrVlJXR1JoVm01bk1GUldaRk5aTWxaRlVWaGtXVk5IWXpCVVZFWTBUa1V4UlZKdFRteFNSVVl6VmpKNE5FNUZNVmhYYlU1c1VrVkdNMWRyV2pST1JURlZXa2RPYkZKRlJqTlhiRm8wVGtVeFdGZHRUbXhTUlVZelYwVm9ibVZGTkhsVmJVNXNVa1ZWTUZkRmFHNWtNREZIWlVSU1RsWkhVbWhUVlZvMFRrVXhSVkZ0ZUZsVFIyUTBWR3BHTkU1Rk1VVlJiWGhaVTBka05GUnRlRFJPUlRGRlVXMTBXVk5IWkRSVU1WbzBUa1V4UlZGdFRteFNSMlEyVjBWb2JtUXdNWE5sUkZKT1VrVkthRk5XV2pST1JURkZVVzE0U2xadVp6QlVWVkpEWTFWc2MyVkVVazVTUlVwelUxVmFORTVGTVVWUmJVNXNVa2RrTmxkRmFHNWtNREZYWlVSU1RsSkZTbXBhVlZKQ1pVWndWRkp0VG14U1JVWXpXVmRzVDFreVZrVlJXR1JaVTBkak1GUlVSalJPUlRGRlVXMU9iRkpGUmpOWFJXaHVaREF4V0ZadFRteFNSVVkxVjBWb2JtUXdNVWhpTW5SWlUwZGtNMVJWWkZOWk1sWkZVbTFvV1ZOSFpETlVWVm8wVGtVNVJWUnRUbXhTUlVZMFYwVm9ibVF3TVVkbFJGSk9Va1ZhYzFkRmFHNWtNWEJYWlVSU1RsSkZTbk5YUldoVFdUSldSVkZZWkdGU2JtY3dWRlprUzFreVZrVlJXR1JaVTBka05GUnFSalJPUlRsRlZHMU9iRkpGUmpSWFJXaHVaREF4UjJWRVVrNVNSVnB6VjBWb2JtUXdNWE5sUkZKT1VrVktlRk5yV2pST1JURkZVVzEwV1ZOSFpEUlhWbG8wVGtVeFJWRnRUbXhTUjJRMlYwVm9ibVF3TVZkbFJGSk9Va1ZLYWxwVlVrSmxSbkJYWlVoc1dWTkhaRE5VVldSVFdUSldSVkp0Y0ZsVFIyUXpWRlZhTkU1Rk1WVmFSM2haVW5wV2FscFZVa0prTVdoSldqTm9UMDFIVW5OWFJXaHVaVVUxYzJWRVVrNVNSVXBKVlRCa1Yxa3lUbk5sUkZKT1VrVktTVlV3WXpGWk1sWklVMVJLV1ZOSFpETlVNR1JYV1RKV1JWSlVRbGxUUjJRelZGVmtVMWt5VmtWU2JYUlpVMGRrTTFSVlpEQlpNbFpGVVZoc1dWTkhaRE5VVldoUFdUSldSVkpZYUZsVFIyUXpWRmN4VjFreVZrVlNWRUpaVTBka00xUlZaRk5aTWxaRlVtMTRXVk5IWkROVVZXUXdXVEpXUlZGWWJGbFRSMlF6VkZWb1Mxa3lWa2hXYlhSWlUwZGtNMVJYTVZkWk1sWkZVbGh3V1ZOSFpETlVWV1JYV1RKT2MyVkVVazVTUlVweVYwVm9ibVZGTVhObFJGSk9Va1ZLYWxwVlVrWk5NWEJYWlVSU1RsSkhhR3BhVlZKQ1pERm9TVm96YUU5TmJFcHFXbFZTUTJKV2FFbGFNMlJPVW01bk1GUldVbXRpUm1oSVRsZE9iRkpGUmpOWFJXaHVaVVUwZUdWRVVsQlNSVFZxV2xWU1FtVkdhRWxhTTJST1VtNUNhbHBWVWtaTlZtaEpXak5rVGxJeFdtcGFWVkpHWld4b1NWb3paRTVTTVZwcVdUSjRORTVGTVVWUmJYUlpVMGRrTkZSVVJqUk9SVEZGVVcxT2JGSkZWWHBYYkZvMFRrVXhSV0ZIVG14U1JVWXpWMFZvYm1WRk5IbFZiVTVzVWtWS2RGZEZhRzVrTURGSFpVUlNUbFpIVW5OWFJXTXhXVEpXUlZGWVpGbFRSMlEwVkdwR05FNUZPVVZVYlU1c1VrVkdORmRGYUc1a01ERkhZMGRPYkZKRlZYbFhSV2h1WkRBeFNGWnRUbXhTUlVwelYwVm9ibVF3TVVoV2JVNXBZa2huTUZSVlVrTmhNV2hKV2pOb1QxSnVaekJVVlZKRFdUSldSVkpVVGxsVFIyTXdWRlJHTkU1Rk1VVlNiVTVzVWtWR00xZEZhRzVrTURGWVZtMU9iRkpGVlhwWFJXaHVaREF4U0ZadFRteFNSVlY0VjBWb2JtUXdNVWRsUkZKUVVrVTFhbHBWVWtKbFJtaEpXak5rVGxJelFtcGFWVkpHVGtab1NWb3paRTVTYm1jd1ZEQlNUMWt5VmtWUldHUlpVMGRrTTFSVlduZFpNbFpGVWxSV1dWTkhaRE5VVldSWFdUSldSVkZZY0ZsVFIyUXpWRlZrZG1KR2FFbGFNMlJPVWpGYWFscFZVa1pPVm1oSldqTmtUbEp1WnpCVU1GSlBXVEpXUlZGWWFGbFRSMlF6VkZWYWQxa3lWa1ZTYld4WlUwZGtNMVJWWkZOWk1sWkZVbTB4V1ZOSFpETlVWV1JYV1RKV1JWSnRiRmxUUjJRelZGVmFORTVGTVZWYVIzUktVbTVuTUZSVlVrTlpNbFpGVWxST1dHRlZTbXBhVlZKQ1pERndWMlZFVWs1V1IxSnFXbFZTUW1ReGNGZGxSRkpPVmtad2FscFZVa0prTVhCSFpVUlNUbFpIZUdwYVZWSkNaREZvU1ZwNlVrNU5XR2N3VkZWU1Mxa3lWa1ZSV0dSWVlWVmFhbHBWVWtKa01YQlVVbTFPYkZKRlJqTlpWMnhMV1RKV1JWRllaR0ZWTUVwcVdsVlNRbVF4YUVsYWVsSk9UVmhuTUZSVlVrZFpNbFpGVVZoa1dWTkhaRE5VVm1SV1lVWm9TVm96WkU1U01qbHhWMFZvYm1Rd01VZGxSRkpRVWtVMWFscFZVa0prTVdoSldqTmtUbEp1WnpCVVZWSkhZa1pvU1ZvelpFNWlTR2N3VkZWU1EyTlZjRWRsUkZKT1VrVktjbGRGYUc1bFJteFhaVVJTVGxKRlNtcGFWVkp1Wld4b1NWb3paRTVXYm1jd1ZGVlNRMWt5VmtWUldHaGhWbTVuTUZSVlpGZFpNbFpGVVZoa1lWWnVaM2RYUldodVpEQXhTRlZ0VG14U1JWcHdWMFZvYm1Rd01VZGxSRkpPVmtkU2FscFZVbTVsYkdoSldqTmtUbFp1WnpCVVZWSkRXVEpXUlZGWWFHRldibWN3VkZWU1Mxa3lWa1ZSV0dSb1lWWkthbHBWVWtKa01YQkhaVVJTVGxZd1dtcGFWVkpDWkRGb1NWcDZVazVOV0djd1ZGVlNSMWt5VmtWUldHUlpVMGRrTTFSV1pGZFpNazV6WlVSU1RsSkZTbkpYUldodVpVWnJlR1ZFVWs1U1JVcHFXbFZTUmsweGNGZGxTRlpaVTBka00xUlZXalJPUlRGVldrVm9ZVlp1WnpCVVZsSmhXVEpXUlZGWVpGTk5SMmh6VjBWb1Mxa3lWa1ZSV0dSVFRVZG9NVmRGYUc5aGF6RnpaVVJTVGxKSFVuTlhSV2h1WlVVMVIyVkVVazVTUlVweVUxWmFORTVGTVVWUmJrcFpVMGRrTTFSWGVEUk9SVEZGVVc1d1dWTkhaRE5VYkZvMFRrVXhSVlJ0ZUZsVFIyUTBWR3RhTkU1Rk1VVlJiWFJLWWtobk1GUlZVa05qYkdoSldqTmtUbUpJWnpCVVZWSkRaVlpvU1dGSGVFNVdibWN3VkZWU1QySkdhRWxhTTJoT1RWaG5NRlJWVWtOaVJtaEpVMjFPYkZKRlJqTlhhMW8wVGtVeFZWTnRUbXhTUlVZelYwVm9ibVZGTkhsV2JVNXNVa1ZGTUZkRmFHNWtNREZIWlVSU1RsWkhVbkpYUldodVpERndjMlZFVWs1U1JVcHFXbFZTUmsweGNGZGxTRlpaVTBka00xUlZXalJPUlRGVldrZE9iRkpIWkRaWFJXaHVaREF4VjJWRVVrNVNSVXBvVjBWb2JtVkZOVmRsUkZKT1VrVktjMWRGYUc1bFJUQjRaVVJTVGxKRlNuTlhSV2hMV1RKV1JWRllaR0ZTYm1jd1ZGWlNUMWt5VmtWUldHUlpVMGRrTkZScVNsZFpNbFpGVVZSU1dWTkhaRE5VVlZvMFRrVXhWVnBIZEZsVFIyUXpWMjE0TkU1Rk1VVlJiVTVzVWtWVmVsZHNXalJrVm1oSldqTmtUbEp1WnpCVVZsSnJXVEpXUlZvemNGbFRSMlF6VkZaYU5FNUZNVVZSYlVaWlUwZGtORlJ0ZURST1JURkZVVzE0V1ZOSFpETlhiRm8wVGtVeFJWRnRlRmxTZWxacVdsVlNRbVF4Y0VkbFJGSk9Wa1pLYWxwVlVrSmtNV2hKV2pOb1QwMVlaekJVTUZKUFdUSldSVkZZYUZsVFIyUXpWRlZhTkU1Rk1VVlNiWGhaVTBka05GUnFSalJPUlRGRlVXMTRXVk5IWkRSVWJGbzBUa1V4UlZGdFRteFNSMlEyVjBWb2JtUXdNVmRsUkZKT1VrVktlRmRGYUc1bFJUbEhaVVJTVGxKRlNtcGFWVkp1Wld4b1NWb3paRTVTYm1jd1ZGVlNRMWxXYUVsYU0yaFFWbTVuTUZSVlVrTmlSbWhKV2pOa1RrMVlaekJVVlZKRFkxVndjMlZFVWs1U1JVcHpWMFZvYm1WRk9WZGxSRkpPVWtWS2FscFZVbTVsYkdoSldqTmtUbFp1WnpCVVZWSkRXVlpvU1ZvemFGcGlTR2N3VkZWU1EyRXdhM2hsUkZKT1VrVktjMWRGYUc1bFJteHpaVVJTVGxKRlNtcGFWVkpHVFRGd1JGRnRUbXhTUlVZelYwVm9ibVZGTkhoaU1tUlpVMGRrTTFSVlpGZFpNbFpGVWxST1dWTkhaRE5VVldSWFdUSldSVkpVU2xsVFIyUXpWRlZrVTFreVZrVlNWRlpaVTBka00xUlZXalJPUlRsRlZHMU9iRkpGUmpWWFJXaHVaREF4UjJJeWFGbFRSMlF6VkZWa1ZtRkdhRWxhTTJST1VqSTVjRmRGYUc1a01ERklWbGRrV1ZOSFpETlVWVm8wVGtVNVJWUnRUbXhTUlVZMFYwVm9ibVF3TVVkbFJGSk9Va1ZhYzFOV1dqUk9SVEZGVVc1R1NrMVlaekJVVlZKRFdUSldSVm96Y0ZsVFIyUXpWRlZhTkU1Rk1VVlJiVTVzVWtWR05GZHNXalJPUlRGRlUyMU9iRkpGUmpOWlYyeFRXVEpXUlZGWVpHRlNibWN3VkZaa1Ixa3lWa1ZSV0dSWlUwZGpNRlJVUmpST1JURkZVbTFPYkZKRlJqTlhSV2h1WkRBeFdGWnRUbXhTUlVwelYwVm9ibVF3TVVoV2JVNXJVbTVuTUZSVlVrTmhNSEJIWlVSU1RsSkZTbXBhVlZKR1RURm9TVnA2VWs1TldHY3dWRlZTUjFreVZrVlJXR1JaVTBka00xUldaRmRaTWxaRlVWaHNXVk5IWkROVVZXUjJZVEZvU1ZvelpFNVNNVXBxV2xWU1IyRkdhRWxhTTJST1VtNW5NRlF3VWs5Wk1sWkZVVmhvV1ZOSFpETlVWVm8wVGtVeFJWSnRlRmxUUlhCcVdsVlNRbVF4Y0VkbFJGSk9WakExYWxwVlVrSmtNV2hKV2pOb1QwMXNXbXBaYlhnMFRrVXhSVkZ0VG14U1JWVjZWV3BLVjFreVZrVlNWRXBaVTBka00xUlZWbXRUVm5CWFpVaHNXVk5IWkROVVZWWnJVMWRLYzJWRVVscE5iRnBxV2xWU1FrMXNjRmRsUkZKT1ZrWkthbHBWVWtKa01YQkVWbTFPYkZKRlJqTlpWRVkwVGtVeFJWTnRUbXhTUlVZeldYcEdORTVHY0hGaVIwNXNVa1ZHTmxkc1dqUk9SVEZWVlcxT2JGSkZSak5YYTA1aFdUSldSVkZZWkdoTldHY3dWRlZTUzFreVZrVlJXR1JxWWtobk1GZHJVbGRaTWxaRlVWUkNZVlp1WnpCVVZsSlBXVEpXUlZGWVpHRldibWcxVjBWb2JtUXdNVWhWYlU1c1VrVldOVmRGYUc1a01ERkhaVVJTVGxaSFVuTlhSV2h1WkRBNVIyVkVVazVTUlVwcVdsVlNSazB4Y0VkbFJGSk9VakZ3YWxwVlVrSmtNV2hKV2pOb1QwMXNXbXBaYlhnMFRrVXhSVkZ0VG14U1JWVjZWMFZvYms1Rk1IaGxSRkpPVWtWYWFscFZVa0prTVdSelpVUlNUbFpHV21wYVZWSkNaREZ3VjJWRVVrNVdSVFZxV2xWU1FtUXhjRmRsU0d4WlUwZGtNMVJWWkZOWk1sWkZVbGh3V1ZOSFpETlVWVm8wVGtVeFZWcEhlRmxUUjJRelZEQmFORTVGTVVWUmJVNXNVa1ZWZWxkcldqUk9SVEZJVjIxT2JGSkZSak5YUldodVpVVTBlVlp0VG1saVNHY3dWRlZTUTFreVZrVlNWRTVaVTBkak1GUlVSalJPUlRGRlVtMU9iRkpGUmpOV01uZzBUa1V4VlZkdFRteFNSVVl6VjJ4YU5FNUZNVWhXYlU1c1VrVkdNMWRzV2pSa1ZtaEpXak5rVGxJeFNtcGFWVkpHVFVab1NWb3paRTVTYm1jd1ZGWlNhMWt5VmtWYU0zQlpVMGRrTTFSV1dqUk9SVEZGVVcxT2JGSkZSalJYYkZvMFRrVXhWVnBIVG14U1JVWXpWMnhhTkU1Rk1WVldiVTVzVWtWR00xZEZhRzVPUlRCNFpVUlNUbEpGV21wYVZWSkNaREpHYzJWRVVrNVdSMmhxV2xWU1FtUXhhRWxhZWxKT1RWaG5NRlJWVWtOWk1sWkZVVmhrV0dKSVp6QlVWbEp6V1RKV1JWRllaR0ZXYm1jd1ZGVlNUMWt5VmtWUldHUm9Za2hrZFZkRmFHNWtNREZJVm0xT2JGSkZWVEZYUldodVpEQXhSMlZFVWxCU1JUVnFXbFZTUW1WR2FFbGFNMlJPVW01Q2FscFZVa2RoVm1oSldqTmtUbEl4U21wVGFrWTBUa1V4UlZGdGVGbFRSMlEwVjFkNE5FNUZNVVZSYlU1c1VrVlZlbGRyVGtOWk1sWkZVVmhrV1ZOSFpEUlVha1oyV2pGb1NWb3paRTVTTVZwcVdsVlNSazB4YUVsYU0yUk9VakZhYWxwVlVrWk5iR2hKV2pOa1RsSXhTbXBhVlZKR1RsWm9TVm96WkU1U2JtY3dWREJTVDFreVZrVlJXR3haVTBka00xUlZXblpoUm1oSldqTmtUbEl4Vm05WFJXaHVaREF4U0dJeWJGbFRSMlF6VkZWa1Zsb3hhRWxhTTJST1VtNW5NRlF3VWs5Wk1sWkZVVmhvV1ZOSFpETlVWVm8wVGtVeFJWSnRlRXBXYm1jd1ZGVlNRMk5WYTNobFJGSk9Va1ZLYWxwVlVtNWxiR2hKV2pOa1RsSnVaekJVVlZKRFdUSldSVkZZYUdGV2JtY3dWRlZTUzFreVZrVlJXR1JvWVZaS2FscFZVa0prTVhCSFpVUlNUbFl3V21wYVZWSkNaREZvU1ZwNlVrNU5XR2N3VkZWU1Ixa3lWa1ZSV0dSWlUwZGtNMVJXWkZkWk1sWkZVVzE0V1ZOSFpETlVWV1JYV1RKU1IyVkVVazVTUlVweVYwVm9ibVZHYkhObFJGSk9Va1ZLYWxwVlVrWk5NV2hKV25wU1RrMVlaekJVVlZKSFdUSldSVkZZWkZsVFIyUXpWRlprVjFreVZrVlJXR3haVTBka00xUlZaSFpoTVdoSldqTmtUbEl4U21wYVZWSkhZVVpvU1ZvelpFNVNibWN3VkRCU1Qxa3lWa1ZSV0doWlUwZGtNMVJWV2pST1JURkZVbTE0V1ZORmNHcGFWVkpDWkRGd1IyVkVVazVXTURWcVdsVlNRbVF4YUVsYU0yaFBUV3hhYWxsdGVEUk9SVEZGVVcxT2JGSkZWWHBWYWtwWFdUSldSVkpVU2xsVFIyUXpWRlZXYTFOV2NGZGxTR3haVTBka00xUlZWbXRUVjBwelpVUlNZVkl3V21wYVZWSkNUVlp3VjJWRVVrNVdSa3BxV2xWU1FtUXhjRVJoUjA1c1VrVkdNMWxVUmpST1JURkZVMjFPYkZKRlJqTlpla1kwVGtad1dGVnRUbXhTUlVWM1YyeGFORTVGTVZWVmJVNXNVa1ZHTTFkclRuTlpNbFpGVVZoa2FFMVlaekJVVlZKTFdUSldSVkZZWkdwaVNHY3dWMWh3YzFreVZrVlJWRVpoVm01bk1GUldVazlaTWxaRlVWaGtZVlp1YURWWFJXaHVaREF4U0ZWdFRteFNSVlkxVjBWb2JtUXdNVWRsUkZKT1ZrZFNjMWRGYUc1a01EbEhaVVJTVGxKRlNtcGFWVkpHVFRGd1IyVkVVazVTTVhCcVdsVlNRbVF4YUVsYU0yaFBUV3hhYWxsdGVEUk9SVEZGVVcxT2JGSkZWWHBYUldodVRrVXdlR1ZFVWs1U1JWcHFXbFZTUW1ReFpITmxSRkpPVmtaYWFscFZVa0prTVhCWFpVUlNUbFpGTldwYVZWSkNaREZ3VjJWSWJGbFRSMlF6VkZWa1Uxa3lWa1ZTV0hCWlUwZGtNMVJWV2pST1JURlZXa2Q0V1ZOSFpETlVNRm8wVGtVeFJWRnRUbXhTUlZWNlYydGFORTVGTVVoWGJVNXNVa1ZHTTFkRmFHNWxSVFI1Vm0xT2FXSklaekJVVlZKRFdUSldSVkpVVGxsVFIyTXdWRlJHTkU1Rk1VVlNiVTVzVWtWR00xWXllRFJPUlRGVlYyMU9iRkpGUmpOWGJGbzBUa1V4U0ZadFRteFNSVVl6VjJ4YU5HUldhRWxhTTJST1VqRkthbHBWVWtaTlJtaEpXak5rVGxKdVp6QlVWbEpyV1RKV1JWb3pjRmxUUjJRelZGWmFORTVGTVVWUmJVNXNVa1ZHTkZkc1dqUk9SVEZWV2tkT2JGSkZSak5YYkZvMFRrVXhWVlp0VG14U1JVWXpWMFZvYms1Rk1IaGxSRkpPVWtWYWFscFZVa0prTWtaelpVUlNUbFpIYUdwYVZWSkNaREZvU1ZwNlVrNU5XR2N3VkZWU1Exa3lWa1ZSV0dSWVlraG5NRlJXVW5OWk1sWkZVVmhrWVZadVp6QlVWVkpYV1RKV1JWRllaR2hoVjJocVdsVlNRbVF4Y0ZkbFJGSk9Wa2Q0YWxwVlVrSmtNV2hKV25wU1RrMVlaekJVVlZKSFdUSldSVkZZWkZoaVNHY3dWRlprUzFreVZrVlJXR1JoVVROQ2FscFZVa0prTVhCWFpVUlNUbFl3Y0dwYVZWSkNaREZvU1ZvemFFOU5iRVp1VjBWb2JtUXdNVWRsUkZKT1ZrZFNhRk5WV2pST1JURkZVVzE0V1ZOSFpEUlVha1kwVGtVeFJWRnRlRmxUUjJRMFZHMTRORTVGTVVWUmJYUlpVMGRrTkZReFdqUk9SVEZGVVcxT2JGSkhaRFpYUldodVpEQXhjMlZFVWs1U1JVcG9VMVphTkU1Rk1VVlJiWGhLVm01bk1GUlZVa05qVld4elpVUlNUbEpGU25OVFZWbzBUa1V4UlZGdFRteFNSMlEyVjBWb2JtUXdNVmRsUkZKT1VrVkthbHBWVWtKbFJuQlVVbTFPYkZKRlJqTlpWMnhQV1RKV1JWRllaRmxUUjJNd1ZGUkdORTVGTVVWUmJVNXNVa1ZHTTFkRmFHNWtNREZZVm0xT2JGSkZSalZYUldodVpEQXhTR0l5ZEZsVFIyUXpWRlZrVTFreVZrVlNiV2haVTBka00xUlZXalJPUlRsRlZHMU9iRkpGUmpSWFJXaHVaREF4UjJWRVVrNVNSVnB6VjBWb2JtUXhjRmRsUkZKT1VrVktjMWRGYUZOWk1sWkZVVmhrWVZKdVp6QlVWbVJMV1RKV1JWRllaRmxUUjJRMFZHcEdORTVGT1VWVWJVNXNVa1ZHTkZkRmFHNWtNREZIWlVSU1RsSkZXbk5YUldodVpEQXhjMlZFVWs1U1JVcDRVMnRhTkU1Rk1VVlJiWFJaVTBka05GZFdXalJPUlRGRlVXMU9iRkpIWkRaWFJXaHVaREF4VjJWRVVrNVNSVXBxV2xWU1FtVkdjRmRsU0d4WlUwZGtNMVJWWkZOWk1sWkZVbTF3V1ZOSFpETlVWVm8wVGtVeFZWcEhlRmxTZWxacVdsVlNRbVF4YUVsYU0yaFBUVWRTYzFkRmFHNWxSVFZ6WlVSU1RsSkZTa2xWTUdSWFdUSk9jMlZFVWs1U1JVcEpWVEJqTVZreVZraFdWRXBaVTBka00xUnJaRmRaTWxaRlVsUkNXVk5IWkROVVZXUlNZMnhvU1ZvelpFNVNNMUpxV2xWU1FtVldhRWxhTTJST1UwVTFhbHBWWkZabFJtaEpXak5rVDFZeFdtcGFWVkpHVFVab1NWb3paRTVTTVVaNlYwVm9ibVF3TVVoa1IwNXNVa1ZHTlZkRmFHNWtNREZKVTFSYVdWTkhaRE5VYlRGWFdUSldSVkpZY0ZsVFIyUXpWRlZrVjFreVRuTmxSRkpPVWtWS2NsZEZhRzVsUlRGelpVUlNUbEpGU21wYVZWSkdUVEZ3VjJWRVVrNVNSMmhxV2xWU1FtUXhhRWxhTTJoUFRXeEthbHBWVWtOaVZtaEpXak5rVGxKdVp6QlVWbEpyWWtab1NFNVhUbXhTUlVZelYwVm9ibVZGTkhobFJGSlFVa1UxYWxwVlVrSmxSbWhKV2pOa1RsSnVRbXBhVlZKR1RWWm9TVm96WkU1U01VcHFXbFZTUW1ReGFFbGFNMlJPVWpGR01GZEZhRzVrTURGSVpVZE9iRkpGUlhwWFJXaHVaREF4U0UxWFRteFNSVnB2VjBWb2JtUXdNVWRqUjA1c1VrVmFiMWRGYUc1a01ERkhaVVJTVGxKRlduTlhSV2h1WlVac1YyVkVVazVTUlVwelYwVm9ibVZGTlZkbFJGSk9Va1ZLYWxwVlVtNWxiR2hKV2pOa1RsWnVaekJVVlZKRFdUSldSVkZZYUdGV2JtY3dWRlZrVjFreVZrVlJXR1JoVm01bmQxZEZhRzVrTURGSVZXMU9iRkpGV25CWFJXaHVaREF4UjJWRVVrNVdSMUpxV2xWU2JtVnNhRWxhTTJST1ZtNW5NRlJWVWtOWk1sWkZVVmhvWVZadVp6QlVWVkpMV1RKV1JWRllaR2hoVmtwcVdsVlNRbVF4Y0VkbFJGSk9WakJhYWxwVlVrSmtNV2hKV25wU1RrMVlaekJVVlZKSFdUSldSVkZZWkZsVFIyUXpWRlprVjFreVRuTmxSRkpPVWtWS1NWVXdZekZOVm1oSldqTmtUMUl4V21wYVZWSkdUVVpvU1ZvelpFNVNNVVl4VjBWb2JtUXdNVWhrUjA1c1VrVkdOVmRGYUc1a01ERkpWR3hPV1ZOSFpETlViVEZYV1RKV1JWSlVRbGxUUjJRelZGVmtVbVJzYUVsYU0yUk9Vak5TYWxwVlVrSmxWbWhKV2pOa1RsTkZjSEpYUldodVpEQTBlVlp0VG14U1JWWTJWMFZvYm1Rd01VaFdiVTVxWWtobk1GUlZVa05oTVdoSldqTm9UbUpJWnpCVVZWSkRXVEpXUlZKVVRtRldibWN3VkZWU2Ixa3lWa1ZSV0dSWlUwZGtORlJxU2xOWk1sWkZVVzB4V1ZOSFpETlVWVm8wVGtVeFZWcEhlRmxTZWxacVdsVlNRbVF4YUVsYU0yaFBUVmhuTUZRd1VrOVpNbFpGVVZob1dWTkhaRE5VVlZwM1dUSldSVkpVUmxsVFIyUXpWRlZrVjFreVZrVlNXSEJaVTBka00xUlZaRmRaTWs1elpVUlNUbEpGU25KWFJXaHVaVVV3ZUdWRVVrNVNSVXBxV2xWU1JrMHhjRmRsUkZKT1VrZG9hbHBWVWtKa01XaEpXak5vVDAxc1NtcGFWVkpEWWxab1NWb3paRTVTYm1jd1ZGWlNhMkpHYUVoT1YwNXNVa1ZHTTFkRmFHNWxSVFI0WlVSU1VGSkZOV3BhVlZKQ1pVWm9TVm96WkU1U2JrSnFXbFZTUmsxc2FFbGFNMlJPVWpGYWFscFZVa05pUm1oSldqTmtUbEl4V21wWmJYZzBUa1V4UlZGdGRGbFRSMlEwVkd0YU5FNUZNVVZSYlU1c1VrVlZlbGRGYUc1T1JUQjRaVVJTVGxKRldtcGFWVkpDWkRGb1NWb3paRTVXTVZwcVdsVlNSazB4YUVsYU0yUk9VakZhYWxwVlVrWk5WbWhKV2pOa1RsSnVaekJVTUZKUFdUSldSVkZZYUZsVFIyUXpWRlZrZDFreVZrVlNWRkpaVTBka00xUlZXalJPUlRsRlZHMU9iRkpGUmpOWFJXaHVaREF4UjJOSFRteFNSVlV4VjBWb2JtUXdNVWhXYlU1c1VrVmFiMWRGYUc1a01ERklWbTFPYkZKRlZURlhSV2h1WkRBeFNGVnRUbXhTUlZWNFYwVm9ibVF3TVVoVmJVNXNVa1ZWZVZkRmFHNWtNREZIWlVSU1VGSkZOV3BhVlZKQ1pXeG9TVm96WkU1U2JUbDNWMFZvYm1Rd01VaFdiVTVzVWtWRmQxZEZhRzVrTURGSVkwZE9iRkpGV25GWFJXaHVaREF4U0ZaWVFsbFRSMlF6VkZWYU5FNUZPVVZVYlU1c1VrVkdORmRGYUc1a01ERkhZak5HV1ZOSFpETlVWV1JYV1RKV1JWRlVSbGxUUjJRelZGVmtkbUl4YUVsYU0yUk9VakZXZUZkRmFHNWtNREZIWlVSU1VGSkZOV3BhVlZKQ1pVWm9TVm96WkU1U2JUbDVWMFZvYm1Rd01VaFdiVTVzVWtWR05sZEZhRzVrTURGSVlqSjRXVk5IWkROVVZXUldZMnhvU1ZvelpFNVNibWN3VkRCU1Qxa3lWa1ZSV0doWlUwZGtNMVJWV25aak1XaEpXak5rVGxJeFJqTlhSV2h1WkRBeFNGWllVbGxUUjJRelZGVmtWbU14YUVsYU0yUk9VbTVuTUZRd1VrOVpNbFpGVVZob1dWTkhaRE5VVlZvMFRrVXhWVnBIZEU1V2JtY3dWRlZTUTFreVZrVlNWRTVZWVZWS2FscFZVa0prTVhCWFpVUlNUbFpIVW1wYVZWSkNaREZ3VjJWRVVrNVdSbkJxV2xWU1FtUXhjRWRsUkZKT1ZrZDRhbHBWVWtKa01XaEpXbnBTVGsxWVp6QlVWVkpMV1RKV1JWRllaRmhoVlZwcVdsVlNRbVF4Y0ZSU2JVNXNVa1ZHTTFsWGJFdFpNbFpGVVZoa1lWVXdTbXBhVlZKQ1pERm9TVnA2VWs1TldHY3dWRlZTUjFreVZrVlJXR1JaVTBka00xUldaRlpoUm1oSldqTmtUbEl5T1hGWFJXaHVaREF4UjJWRVVsQlNSVFZxV2xWU1FtUXhhRWxhTTJST1VtNW5NRlJWVWtkaVJtaEpXak5rVG1KSVp6QlVWVkpEWTFWd1IyVkVVazVTUlVweVYwVm9ibVZHYkZkbFJGSk9Va1ZLYWxwVlVtNWxiR2hKV2pOa1RsWnVaekJVVlZKRFdUSldSVkZZYUdGV2JtY3dWRlZrVjFreVZrVlJXR1JoVm01bmQxZEZhRzVrTURGSVZXMU9iRkpGV25CWFJXaHVaREF4UjJWRVVrNVdSMUpxV2xWU2JtVnNhRWxhTTJST1ZtNW5NRlJWVWtOWk1sWkZVVmhvWVZadVp6QlVWVkpMV1RKV1JWRllaR2hoVmtwcVdsVlNRbVF4Y0VkbFJGSk9WakJhYWxwVlVrSmtNV2hKV25wU1RrMVlaekJVVlZKSFdUSldSVkZZWkZsVFIyUXpWRlprVjFreVRuTmxSRkpPVWtWS2NsZEZhRzVsUm10NFpVUlNUbEpGU21wYVZWSkdUVEZ3VjJWSVZsbFRSMlF6VkZWYU5FNUZNVlZhUldoaFZtNW5NRlJXVW1GWk1sWkZVVmhrVTAxSGFITlhSV2hMV1RKV1JWRllaRk5OUjJneFZYcEdORTVGTVVWVWJYaFpVMGRrTkZScldqUk9SVEZGVVcxMFRtSklaekJVVlZKRFkyeG9TVm96WkU1aVNHY3dWRlZTUTJWdFdrZGxSRkpPVWtkU2MxZEZhRzVsUlRWSFpVUlNUbEpGU25KVVZFWTBUa1V4UlZGdVNsbFRSMlF6VkZkNE5FNUZNVVZSYm14WlUwZGpNRmRzV2pST1JURkZZVWQ0V1ZOSFpEUlVWRVkwVGtVeFJWRnRlRmxUUlhCcVdsVlNRbVF4Y0VkbFJGSk9Wa1Z3YWxwVlVrSmtNV2hKV2pOb1QwMXNXbXBhVlZKQ1RrWm9TVm96WkU1U2JtY3dWRlpTYTJFeGFFbGFNMlJoWWtobk1GUlZVa05aTWxaRlVsUk9ZVlp1YURGWFJXaHVaREF4UjJWRVVrNVdSMUpxV2xWU2JtVnNhRWxhTTJST1ZtNW5NRlJWVWtOWlZtaEpXak5vVDFadVp6QlVWVkpEWWtab1NWb3phRTVOV0djd1ZGVlNRMkpHYUVsVGJVNXNVa1ZHTTFkcldqUk9SVEZWVkcxT2JGSkZSak5YUldodVpVVTBlVlp0VG14U1JVVXdWMFZvYm1Rd01VZGxSRkpPVmtkU2NsZEZhRzVrTVhCelpVUlNUbEpGU21wYVZWSkdUVEZ3VjJWSVZsbFRSMlF6VkZWYU5FNUZNVlZhUjA1c1VrZGtObGRGYUc1a01ERlhaVVJTVGxKRlNtaFhSV2h1WlVVMWMyVkVVazVTUlVwelYwVm9ibVF4Y0ZkbFJGSk9Va1ZLYzFkRll6RlpNbFpGVVZoa1lWSnVaekJVVmxKVFdUSldSVkZZWkZsVFIyUTBWR3BHTkU1Rk9VVlViVTVzVWtWR05GZEZhRzVrTURGSFpVUlNUbEpGV25OWFJXaHVaVVUwZUdWRVVrNVNSVXB6VjBWb2JtVkZOVmRsUkZKT1VrVkthbHBWVW01bGJHaEpXak5rVGxadVp6QlVWVkpEWTFab1NWb3phRkJTYm1jd1ZGVlNRMWt5VmtWYU0zQlpVMGRrTTFSVldqUk9SVEZGVVcxR1dWTkhaRFJVTVZvMFRrVXhSVkZ0ZUZsVFIyUTBWMVphTkU1Rk1VVlJiWGhaVTBka05GUXhXalJPUlRGRlVXMTBXVk5IWkRSVWJGbzBUa1V4UlZGdGRGbFRSMlEwVkcxNE5FNUZNVVZSYlU1c1VrZGtObGRGYUc1a01EQjRaVVJTVGxKRlNtaFRNVm8wVGtVeFJWRnRlRmxUUjJRelZHdGFORTVGTVVWUmJrWlpVMGRrTkZkVVJqUk9SVEZGVVcxNFRGWnVaekJVVlZKRFdUSldSVm96Y0ZsVFIyUXpWRlphTkU1Rk1VVlJiVVpNWWtobk1GUlZVa05pUm1oSldqTmtUMVp1WnpCVVZWSkRZMVYwUjJWRVVrNVNSVXB6VXpKNE5FNUZNVVZSYlU1c1VrZGtObGRGYUc1a01ERlhaVVJTVGxKRlNtaFRla1kwVGtVeFJWRnRlRmxUUjJRelZGUkdORTVGTVVWUmJrWkxZa2huTUZSVlVrTmlSWE40WlVSU1RsSkZTbXBhVlZKdVpXeG9TVm96WkU1V2JtY3dWRlZTUTFsVmVFZGxSRkpPVWtWS2NsUnJXalJPUlRGRlVXMTRUVlp1WnpCVVZWSkRZa1Y0UjJWRVVrNVNSVXBxV2xWU2JtVnNhRWxhTTJST1ZtNW5NRlJWVWtOWk1sWkZVbFJPWVZKRldtcGFWVkpDWkRGb1NWb3phRTlOVnpsdVYwVm9ibVF3TVVoV2JVNXNVa1ZWZWxkRmFHNWtNREZJVm0xT2JGSkZWWGxYUldodVpEQXhTRlZ0VG14U1JWVXhWMFZvYm1Rd01VZGxSRkpRVWtVMWFscFZVa0psVm1oSldqTmtUbEp0T1c5WFJXaHVaREF4U0ZaWGFGbFRSMlF6VkZWa2RtRldhRWxhTTJST1VqRldibGRGYUc1a01ERkhaVVJTVUZKRk5XcGFWVkpDWlVab1NWb3paRTVTYm1jd1ZGVlNSMkpGYkZkbFJGSk9Va1ZLZUZOVVJqUk9SVEZGVVcxT2JGSkhaRFpYUldodVpEQXhSMlZFVWs1U1JVcHFXbFZTUW1WR2NGZGxSRkpPVWtWd2FscFZVa0prTWtad1ZXMU9iRkpGUmpOWGExbzBUa1V4V0ZKdFRteFNSVVl6VjBWb2JrNUZNSGhsUkZKT1VrVmFhbHBWVWtKa01XaEpXak5rVGxZeFdtcGFWVkpEWWtab1NWb3paRTVTTVZwcVdrVmFORTVGTVVWUmJYUlpVMGRrTkZkWGVEUk9SVEZGVVcxT2JGSkZWWHBYUldodVRrVXdlR1ZFVWs1U1JWcHFXbFZTUW1ReGFFbGFNMlJPVmpGYWFscFZVa0psVm1oSldqTmtUbEl5T1hKWFJXaHVaREF4U0ZWdFRteFNSVnB2VjBWb2JtUXdNVWRsUkZKUVVrVTFhbHBWVWtKbFJtaEpXak5rVGxKdVp6QlVWVkpIWWtab1NWTnRUbXhTUlVZelYydGFORTVGTVZoVWJVNXNVa1ZHTTFkRmFHNWxSVFI1Vm0xT2FXSklaekJVVlZKRFdUSldSVkpVVGxOTmJGcHFXbFZTUmsxc2FFbGFNMlJPVWxkU1NsZHNXalJsVm1oSldqTmtUbEpYVWtwWmJXeEhXVEpXUlZGWWJHRldibWN3VkZaU1Uxa3lWa1ZSV0dSaFVrWmFhbHBWVWtKa01rVjRaVVJTVGxKRmNHcGFWVkpDWkRKTmVHVkVVbHBXUm5CcVdsVlNRazVHY0ZkbFJGSk9Wa1pLYWxwVlVrSmtNWEJGVjIxT2JGSkZSak5aVkVZMFRrVXhSVk50VG14U1JVWXpXVEo0TkU1R2JIRmhSMDVyVWpGYWFscFZVa1psYkdoSldqTmtUbEl4V21wWk1uZzBUa1V4UlZGdGRGbFRSMlEwVkZkNE5FNUZNVVZSYlU1c1VrVlZlbGRzV2pST1JURkZZVWRPYkZKRlJqTlhSV2h1WlVVMGVWVnRUbXhTUlVwMFYwVm9ibVF3TVVkbFJGSk9Wa2RTYzFkRll6RlpNbFpGVVZoa1dWTkhaRFJVYWtZMFRrVTVSVlJ0VG14U1JVWTBWMFZvYm1Rd01VZGpSMDVzVWtWVmVGZEZhRzVrTURGSVZtMU9iRkpGVmpaWFJXaHVaREF4U0ZadFRtcGlTR2N3VkZWU1EyRXhhRWxhTTJoT1RWaG5NRlJWVWtOWk1sWkZVbFJPWVZadVp6QlVWVkp2V1RKV1JWRllaRmxUUjJRMFZHcEtVMWt5VmtWUmJURlpVMGRrTTFSVldqUk9SVEZWV2tkNFdWSjZWbXBhVlZKQ1pERm9TVm96YUU5TldHY3dWREJTVDFreVZrVlJXR2haVTBka00xUlZXbmRaTWxaRlVsUktXVk5IWkROVVZXUlhXVEpXUlZGdGVGbFRSMlF6VkZWa1Yxa3lTbk5sUkZKT1VrVktjbGRGYUc1bFJUVkhaVVJTVGxKRlNtcGFWVkpHVFRGb1NWcDZVazVOV0djd1ZGVlNSMWt5VmtWUldHUlpVMGRrTTFSV1pGZFpNbFpGVWxST1dWTkhaRE5VVldSWFdUSldSVkpVUmxsVFIyUXpWRlZhTkU1Rk9VVlViVTVzVWtWR05GZEZhRzVrTURGSVkwZE9iRkpGVlRCWFJXaHVaREF4UjJWRVVsQlNSVFZxV2xWU1FtUXhhRWxhTTJST1VtNUNhbHBWVWtaT1ZtaEpXak5rVGxJeFdtcGFWVkpIWVVab1NWb3paRTVTTVZwcVdsVlNSazVXYUVsYU0yUk9VakZLYWxwVlVrWk5WbWhKV2pOa1RsSXhTbXBhVlZKR1RXeG9TVm96WkU1U2JtY3dWREJTVDFreVZrVlJXSEJaVTBka00xUlZXblpqUm1oSldqTmtUbEl4V21wYVZWSkNUVVpvU1ZvelpFNVNNMEpxV2xWU1IyRnNhRWxhTTJST1VqRldkMWRGYUc1a01ERkhaVVJTVUZKRk5XcGFWVkpDWlVab1NWb3paRTVTYlRsNFYwVm9ibVF3TVVoV2JVNXNVa1ZGZUZkRmFHNWtNREZJWWpJNVdWTkhaRE5VVldSV1kxWm9TVm96WkU1U2JtY3dWREJTVDFreVZrVlJXR2haVTBka00xUlZXblpqYkdoSldqTmtUbEl4V21wYVZWSkNaV3hvU1ZvelpFNVNNMEpxVTJwR05FNUZNVVZSYlhoTVRWaG5NRlJWVWtOWk1sWkZXak53V1ZOSFpETlVWbG8wVGtVeFJWRnRSazFTYm1jd1ZGVlNRMkV3TkhobFJGSk9Va1ZLYzFSR1dqUk9SVEZGVVcxNFRWSnVaekJVVlZKRFdUSldSVm96Y0ZsVFIyUXpWRlphTkU1Rk1VVlJiVTVzVWtWVmVsZHJVa2RaTWxaRlVWaGtXVk5IWkRSVWFrWjJXakZvU1ZvelpFNVNNVnBxV2xWU1JrMHhhRWxhTTJST1VqRmFhbHBWVWtaTmJHaEpXak5rVGxJeFNtcGFWVkpHVGxab1NWb3paRTVTYm1jd1ZEQlNUMWt5VmtWUldHeFpVMGRrTTFSVlduWmhSbWhKV2pOa1RsSXhWbTlYUldodVpEQXhTR0l5YkZsVFIyUXpWRlZrVmxveGFFbGFNMlJPVW01bk1GUXdVazlaTWxaRlVWaG9XVk5IWkROVVZWbzBUa1V4UlZKdGVFcFdibWN3VkZWU1EyTlZhM2hsUkZKT1VrVkthbHBWVW01bGJHaEpXak5rVGxKdVp6QlVWVkpEV1RKV1JWRllhR0ZXYm1jd1ZGVlNTMWt5VmtWUldHUm9ZVlpLYWxwVlVrSmtNWEJIWlVSU1RsWXdXbXBhVlZKQ1pERm9TVnA2VWs1TldHY3dWRlZTUjFreVZrVlJXR1JaVTBka00xUldaRmRaTWxaRlVXMTRXVk5IWkROVVZXUlhXVEpTUjJWRVVrNVNSVXB5VjBWb2JtVkdiSE5sUkZKT1VrVkthbHBWVWtaTk1XaEpXbnBTVGsxWVp6QlVWVkpIV1RKV1JWRllaRmxUUjJRelZGWmtWMWt5VmtWUldHeFpVMGRrTTFSVlpIWmhNV2hKV2pOa1RsSXhTbXBhVlZKSFlVWm9TVm96WkU1U2JtY3dWREJTVDFreVZrVlJXR2haVTBka00xUlZXalJPUlRGRlVtMTRXVk5GY0dwYVZWSkNaREZ3UjJWRVVrNVdNRFZxV2xWU1FtUXhhRWxhTTJoUFRXeGFhbGx0ZURST1JURkZVVzFPYkZKRlZYcFZha3BYV1RKV1JWSlVTbGxUUjJRelZGVldhMU5XY0ZkbFNHeFpVMGRrTTFSVlZtdFRWMHB6WlVSU1lXRnRVbXBhVlZKQ1pERndWMlZFVWs1V1JrcHFXbFZTUW1ReGNFVmhSMDVzVWtWR00xbFVSalJPUlRGRlUyMU9iRkpGUmpOWk1uZzBUa1pzV0ZkdFRtbGlWbHBxV2xWU1JtVnNhRWxhTTJST1VqRmFhbGt5ZURST1JURkZVVzEwV1ZOSFpEUlVWM2cwVGtVeFJWRnRUbXhTUlZWNlYyeGFORTVGTVVWaFIwNXNVa1ZHTTFkRmFHNWxSVFI1VlcxT2JGSkZTblJYUldodVpEQXhSMlZFVWs1V1IxSnpWMFZqTVZreVZrVlJXR1JaVTBka05GUnFSalJPUlRsRlZHMU9iRkpGUmpSWFJXaHVaREF4UjJOSFRteFNSVlY0VjBWb2JtUXdNVWhXYlU1c1VrVldObGRGYUc1a01ERklWbTFPYW1KSVp6QlVWVkpEWVRGb1NWb3phRTVOV0djd1ZGVlNRMWt5VmtWU1ZFNWhWbTVuTUZSVlVtOVpNbFpGVVZoa1dWTkhaRFJVYWtwVFdUSldSVkZ0TVZsVFIyUXpWRlZhTkU1Rk1WVmFSM2haVW5wV2FscFZVa0prTVdoSldqTm9UMDFZWnpCVU1GSlBXVEpXUlZGWWFGbFRSMlF6VkZWYWQxa3lWa1ZTVkVwWlUwZGtNMVJWWkZkWk1sWkZVVzE0V1ZOSFpETlVWV1JYV1RKS2MyVkVVazVTUlVweVYwVm9ibVZGTlVkbFJGSk9Va1ZLYWxwVlVrWk5NV2hKV25wU1RrMVlaekJVVlZKSFdUSldSVkZZWkZsVFIyUXpWRlprVjFreVZrVlNWRTVaVTBka00xUlZaRmRaTWxaRlVsUkdXVk5IWkROVVZWbzBUa1U1UlZSdFRteFNSVVkwVjBWb2JtUXdNVWhqUjA1c1VrVlZNRmRGYUc1a01ERkhaVVJTVUZKRk5XcGFWVkpDWkRGb1NWb3paRTVTYmtKcVdsVlNSazVXYUVsYU0yUk9VakZhYWxwVlVrSk5WbWhKV2pOa1RsSXlPWFpYUldodVpEQXhTRlp0VG14U1JWVXhWMFZvYm1Rd01VZGxSRkpRVWtVMWFscFZVa0psUm1oSldqTmtUbEp0T1hkWFJXaHVaREF4U0ZadFRteFNSVVkyVjBWb2JtUXdNVWhpTW5oWlUwZGtNMVJWWkZaalJtaEpXak5rVGxKdVp6QlVNRkpQV1RKV1JWRllhRmxUUjJRelZGVmFkbU5XYUVsYU0yUk9VakZGTVZkRmFHNWtNREZJVmxoR1dWTkhaRE5VVlZvMFRrVXhWVnBIZEZCaVNHY3dWRlZTUTFreVZrVlNWRTVZWVZWS2FscFZVa0prTVhCWFpVUlNUbFpIVW1wYVZWSkNaREZ3VjJWRVVrNVdSbkJxV2xWU1FtUXhjRWRsUkZKT1ZrZDRhbHBWVWtKa01XaEpXbnBTVGsxWVp6QlVWVkpMV1RKV1JWRllaRmhoVlZwcVdsVlNRbVF4Y0ZSU2JVNXNVa1ZHTTFsWGJFdFpNbFpGVVZoa1lWVXdTbXBhVlZKQ1pERm9TVnA2VWs1TldHY3dWRlZTUjFreVZrVlJXR1JaVTBka00xUldaRlpoUm1oSldqTmtUbEl5T1hGWFJXaHVaREF4UjJWRVVsQlNSVFZxV2xWU1FtUXhhRWxhTTJST1VtNW5NRlJWVWtkaVJtaEpXak5rVG1KSVp6QlVWVkpEWTFWd1IyVkVVazVTUlVweVYwVm9ibVZHYkZkbFJGSk9Va1ZLYWxwVlVtNWxiR2hKV2pOa1RsWnVaekJVVlZKRFdUSldSVkZZYUdGV2JtY3dWRlZrVjFreVZrVlJXR1JoVm01bmQxZEZhRzVrTURGSVZXMU9iRkpGV25CWFJXaHVaREF4UjJWRVVrNVdSMUpxV2xWU2JtVnNhRWxhTTJST1ZtNW5NRlJWVWtOWk1sWkZVVmhvWVZadVp6QlVWVkpMV1RKV1JWRllaR2hoVmtwcVdsVlNRbVF4Y0VkbFJGSk9WakJhYWxwVlVrSmtNV2hKV25wU1RrMVlaekJVVlZKSFdUSldSVkZZWkZsVFIyUXpWRlprVjFreVRuTmxSRkpPVWtWS2NsZEZhRzVsUm10NFpVUlNUbEpGU21wYVZWSkdUVEZ3VjJWSVZsbFRSMlF6VkZWYU5FNUZNVlZhUldoaFZtNW5NRlJXVW1GWk1sWkZVVmhrVTAxSGFITlhSV2hMV1RKV1JWRllaRk5OUjJneFYwVm9ibVF3TVVkbFJGSk9Va1ZLY2xkRmFHNWtNREZYWlVSU1RsSkZTbFZUTUZJd1dUSldSVkZZWkZsVFIyUXpWRlZhTkU1Rk1VVlJia0paVTBkb2RGZHRlRFJPUm5CMFYyMU9iRkl4Y0hSWFJXaHZZbFp3Y2s1WWNGbFRSMlF6VkdwR05FNUZNVVZSYlU1c1VrVkdNMWRGYUc1a01ERkhaVVJTVGxZd2NHbFVWbEo2WldzeFdFMVljRmxUUjJRelZHcEdORTVGTVVWUmJVNXNVa1ZHTTFkRmFHNWtNREZIWlVSU1RsWXdjR2xVVmxKNlpXc3hkRTFZY0ZsVFIyUXpWR3BHTkU1Rk1VVlJiVTVzVWtWR00xZEZhRzVrTURGSFpVUlNUbFl3Y0dsVVZsSjZaV3N3ZVUxWWNGbFRSMlF6VkdwR05FNUZNVVZSYlU1c1VrVkdNMWRGYUc1a01ERkhaVVJTVGxZd2NHbFVWbEo2WldzMVNFMVljRmxUUjJRelZHcEdORTVGTVVWUmJVNXNVa1ZHTTFkRmFHNWtNREZIWlVSU1RsWXdjR2xVVmxKNlpXczFkRTFZY0ZsVFIyUXpWR3BHTkU1Rk1VVlJiVTVzVWtWR00xZEZhRzVrTURGSFpVUlNUbFl3Y0dsVVZsSjZaV3MwZVUxWGNGbFRSMlF6VkZaYU5FNUZNVVZSYlU1c1VrVkdNMWRGYUc1a01ERkhaVVJTVGxKRmNHcGFWVkpDWkRGb1NWb3paRTVTYm1jd1ZGVlNRMWt5VmtWUlZFcFpVMGRrTTFSVldqUk9SVEZGVVcxT2JGSkZSak5WVkVZMFRrVXhSVkZ0VG14U1JVWXpWMFZvYm1Rd01VbFVia3BaVTBka00xUlZXalJPUlRGRlVXMU9iRkpGUmpOYVZsWlBXVEpXUlZGWVpHeFNTR2hxV2xWU1FtUXlXa2RsUkZKT1VrVkthbHBWVWtKa01YQkhaVVJTVGxKRldtcGFWVkpDWkRGb1NWb3phRTlOUmtwclZGVmFORTVGTVVWUmFteFpVMGRrTTFSV1dqUk9SVEZGVVdwQ1dWTkhaRE5VVlZvMFRrVXhSVkZ1UmxsVFIyUXpWRlphTkU1Rk1VVlJia1paVTBka00xUlhlRFJPUlRGRlVXcG9XVk5IWkROVVZsbzBUa1V4UlZGdFRteFNSMlEyVjBWb2JtUXdNVmRsUkZKT1VrVkthbHBWVWtKbFIxSkhaVVJTVGxKRlNtcGFWVkpDWkRKR2MyVkVVazVTUlZwcVdsVlNRbVF5Um5ObFJGSk9Va1UxYWxwVlVrSmtNV2hKV25wU1RrMVlaekJVVlZKRFdUSldSVkZZWkZsVFIyUXpWRlpvVTFreVZrVlJWRUpaVTBka00xUlZaSGRaTWxaRlVWUkdXVk5IWkROVVZXUlRXVEpXUlZGWWJGbFRSMlF6VkZWYU5FNUZPVVZVYlU1c1VrVkdORmRGYUc1a01ERkhaVVJTVGxKRldqUlhSV2h1WkRGd1YyVkVVazVTUlVwWlZtcEpNR0ZHYUVsYU0yUk9VbTVuTUZSVlVsTk5SbWhKV2pOa1QySklaekJVVlZKRFRVWm9TVm96WkU5TldHY3dWRlZTUTJKV2FFbGFNMlJPWWtobk1GUlZVa05qYkdoSVRsZE9iRkpGUmpOWk1qRmhXVEpXUlZGWVpGbFRSMlF6VkZaYU5FNUZNVVZTYlU1c1VrVkdORnBGV2pST1JURkZZVWRPYkZKRlJqTlhhMW8wVGtVeFJWUnRUbXhTUlVZelYwVm9iazVGTUhobFJGSk9Va1ZhYWxwVlVrSmtNV2hKV2pOa1RsWjZWbXBhVlZKQ1pVWm9TVm96WkU1U2JXaHlWMFZvYm1Rd01VZGxSRkpPVWtWS1ZWTXdXalJPUlRGRlZXMU9iRkpGUmpOWFJXaHVaREF4UjJWRVVrNVNSVXBRV1hwR05FNUZNVVZTYlU1c1VrVkdNMWRGYUc1a01ERkhaVVJTVGxKRlNtcFpiVEZyV1RKV1NGZHRjRmxUUjJodlZERmFORTVHY0hGU2JVNXNVakZHTlZaR1pFdFZWa0Y2VkcxT2JGSkZTbkJYUldodVpEQXhSMlZFVWs1U1JVcHFXbFZTUW1ReFVuUlBXRlphVmpOUmQxbFdaRnBoUld4VVVsYzVXVk5HU21wYVZWSkNaREZvU1ZvelpFNVNibWN3VkZWU1EwMUdhRWxhTTJST1RWaG5NRlJWVWtOWk1sWkZVVmhrV1ZOSFpETlVWV2hQVGxkTmVsVnRUbXhTUlVWNVYwVm9ibVF3TVVkbFJGSk9Va1ZLYWxwVlVrSmtNazE2VlcxMGFVMHhXWGRhUlZvMFRrVXhSVlp0VG14U1JVWXpWMFZvYm1Rd01VZGxSRkpPVWtWSmVsa3lNWE5OUm5CWlZXMU9iRkpGUlhoWFJXaHVaREF4UjJWRVVrNVNSVXBxV2xWU1FtUXhjSFJsUkVacVRXMW5kMWRGYUc1a01EVkhaVVJTVGxKRlNtcGFWVkpDWkRGb1NWb3paRTVUUmtwM1dXeGtWMDFHYUVsYU0yUlBWbTVuTUZSVlVrTlpNbFpGVVZoa1dWTkhaRE5VVldoUFl6RndXRlp1Wkd0U2JtY3dWRlpTUjFreVZrVlJXR1JaVTBka00xUlZXalJPUlRGRlVXdDRZVmRIZUhCWmFrcEhaVlp3Um1KSVZtdFNNVm8xV1RJMVYyUXlVa2xWYlU1c1VrVkZNRmRGYUc1a01ERkhaVVJTVGxKRlNtcGFWVkpDWkRGS1ZrOVZaRk5YUlhBMVdXcE9TMDFHYUVsYU0yUk9UVmhuTUZSVlVrTlpNbFpGVVZoa1dWTkhaRE5VVldoTFRWZEtjR0ZIVG14U1JVWTFWMFZvYm1Rd01VZGxSRkpPVWtWS2FscFZVa0prTWxKSFpVUlNUbEpGV21wYVZWSkNaREZvU1ZvelpFNVNibWN3VkZWU1EyVnRVa2RsUkZKT1VrVmFhbHBWVWtKa01XaEpXak5rVGxKdVp6QlVWVkpEWVd0MFIyVkVVazVTUlVwcVdsVlNRbVF4YUVsYU0yUk9VbTVuTUZSVlVrSmlNV2hKV2pOa1RsSnVaekJVVlZKRFdUSldSVkZZWkZsVFIyUXpWRlZvVDFreVZrVlJXR3haVTBka00xUlZXalJPUlRGRlVXMU9iRkpGUmpOWGEyUnJUVVpvU1ZWdFRteFNSVVl6VjBWb2JtUXdNVWRsUkZKT1VrVktObGxyWXpWTk1rNUpVMjVDYVdKc1NtcGFWVkpEWWtab1NWb3paRTVTYm1jd1ZGVlNRMWt5VmtWUldHUnFUVmhuTUZSVlpGZFpNbFpGVVZoa1dWTkhaRE5VVlZvMFRrVXhSVkZ0VG14U1JVWXpWMFZvYm1Rd01WZGxSRkpPVWtVMWFscFZVa0psUm1oSldqTm9UbFp1WnpCVVZWSkhXVEpXUlZKWVpGbFRSMlF6VkZaYU5HVldhRWxhTTJST1ZtNW5NRlJXVWxkWk1sWkZVVmhzV1ZOSFpEUlVWRVkwVGtVeFJWSnRjRmxUUjJRelZGWmFORTVGTVVWUmJVNXNVa1ZHTTFkRmFHNWtNREZIWlVSU1RsSkZjR3BhVlZKQ1pERm9TVm96WkU1U2JtY3dWRlZTUTFreVZrVlJXSEJaVTBka00xUlZXalJPUlRGRlVXMU9iRkpGUmpOVlZFWTBUa1V4UlZGdFRteFNSVVl6VjBWb2JtUXdNVWxVYTFKWlUwZGtNMVJWV2pST1JURkZVVzFPYkZKRlJqTmFWVkkwV1RKV1JWRllaRzFTYm1jd1ZGVlNRMWt5VmtWUldHUmhVbTVuTUZSVlVrZFpNbFpGVVZoa1dWTkhaRFJVYWtKVFdrVXhSMlZFVWs1U1JVazFWMFZvYm1Rd01WZGxSRkpPVWtWSmQxZEZhRzVrTURGSFpVUlNUbEpGU25oWFJXaHVaREF4VjJWRVVrNVNSVXA0VjBWb2JtUXdNWE5sUkZKT1VrVkpORmRGYUc1a01ERlhaVVJTVGxKRlNtcGFWVkp1Wld4b1NWb3paRTVXYm1jd1ZGVlNRMWt5VmtWUldHaHJVbTVuTUZSVlVrTlpNbFpGVVZoa2FHSklaekJVVlZKSFdUSldSVkZZWkdoaVNHY3dWRlZTVDFreVZrVlJXR1JaVTBkak1GUlVSalJPUlRGRlVXMU9iRkpGUmpOWFJXaHVaREF4V1ZWdFRteFNSVVYzVjBWb2JtUXdNVWhqUjA1c1VrVkZlRmRGYUc1a01ERklWVzFPYkZKRlJqVlhSV2h1WkRBeFIyVkVVbEJTUlRWcVdsVlNRbVZHYUVsYU0yUk9VbTVuTUZSVlVrZGxSbWhKV2pOa1dtSklaekJVVlZKRFYwWndSMlZFVWs1U1JVcHFXbFZTUW1ReFZqVmhSMDVzVWtWR05sZEZhRzVrTURGSFpVUlNUbEpGU21wYVZWSkNaREZTZFZSdFRteFNSVVkwVjBWb2JtUXdNVWRsUkZKT1VrVkthbHBWVWtKa01XaElUbGMxYkUxWVp6QlVWbEpUV1RKV1NGSnRlRk5OV0djd1YyeFNSMDVzYUVsYWVsSlBVa1JvZGxkRmFHNWtNRFZ6WlVSU1RsSkZTbXBhVlZKQ1pERm9TVm96WkU1U2EzQnFXbFZTUW1ReGFFbGFNMlJPVW01bk1GUlZVa05aTWxaRlVWaGtWbUpJWnpCVVZWSkhXVEpXUlZGWVpGbFRSMlF6VkZWYU5FNUZNVVZSYkU1WlUwZGtNMVJYZURST1JURkZVVzFPYkZKRlJqTlhSV2h1WkRBeFIxTnRUbXhTUlVZMlYwVm9ibVF3TVVkbFJGSk9Va1ZLYWxwVlVrSmtNVlp6WlVSU1RsSkdTbXBhVlZKQ1pERm9TVm96WkU1U2JtY3dWRlZTUTFVeGFFbGFNMlJQVm01bk1GUlZVa05aTWxaRlVWaGtXVk5IWkROVVZVNXZXVEpXUlZGWWJGbFRSMlF6VkZWYU5FNUZNVVZSYlU1c1VrVkdNMVpYZURSTlJtaEpXak5rVGxKdVp6QlVWVkpEV1RKV1JWRllaRlppU0dneFYwVm9ibVF3TVVkbFJGSk9Va1ZLYWxwVlVrSmtNSFJIWlVSU1RsSkZTbXBhVlZKQ1pERm9TVm96WkU1U2JtY3dWRlZTUW1JeGFFbGFNMlJPVW01bk1GUlZVa05aTWxaRlVWaGtXVk5IWkROVVZXaFBXVEpXUlZGWWJGbFRSMlF6VkZWYU5FNUZNVVZSYlU1c1VrVkdNMWRyWkd0TlJtaEpXak5rV21KSVp6QlVWVkpEV1RKV1JWRllaRmxUUjJRelZGVm9UMk15U1hwYVNHUnFZbGQ0TVZwRmFHOU9SbWhKV2pOb1VGWnVaekJVVlZKRFdUSldSVkZZWkZsVFIyUXpWRlZvVDFreVZrVlJWRkpaVTBka00xUlZXalJPUlRGRlVXMU9iRkpGUmpOWFJXaHVaREF4UjJWRVVrNVNSVnBxV2xWU1JtVkdhRWxhTTJST1ZtNW5NRlJXVWtOWk1sWkZVVmhvV1ZORmNHcGFWVkpDWlVkTmVHVkVVbHBXUm5CcVdsVlNRbVZXYUVsYU0yUk9VbTVuTUZSVlVrTlpNa3B6WlVSU1RsWXdjR2xVVmxKNlpXczFXRTFJVWsxVmVrSXdWRVpOZDJSRmVGUk5TRkpOVlhwQ01GUkdUWGRrUlhoVVRVaFNUVlY2UWpCVVJrMTNaRVY0VkUxSVVrMVZla0l3VkVaTmQyUkZlRlJOU0ZKTlZYcEdhbGx0ZURST1JURllVMjFLVGxaSVRqWlViR040VDBWc1JGRnRUbXhTUlZwd1ZqTndSazR3TVRaU2JsSktVVEJHYmxkRVJUVmFiR2cxVVZka1NsRXdSbTVUVlU1Q1dqQnNSMDlYV2xsbFZVWnVVMVZPUWxvd2JFUlJWMlJLVVRCS2JWZEVSVFJhTVdoSldqTm9XbUpJVGpSVU0zQk9UVmRLVkZGWFpHMVNibWd4V210T1Fsb3hhRWxhTTJoYVlraE9ORlF6Y0U1bFIwcFVVVmRrVFdWVlNtMVhTR3MxV214b05WRlhaRmxOVkd4dFYwaHJORm94YURWUmJVNVpVbXBzYlZOVldUVmFhMnhFVVZka2JWSnFhRzVUVldneldqRm9TVm96YUZwaVNFNDBWRE53VGsxWFNsUlJhbWhaVW5wVk5GTlZUa05aTWxaRlVtMXNXR1ZyVlROVVdIQnJaRVZzUkU5SFpGbGxWR2d5VTFWWk5Gb3hhRWRrTTFwS1VtcHNiVlJJYkVOYWJHZDRUMGhhU2xGNmFESlRWVTAwV2pCc1JGRllXa3BTYW14dFZFaHNRMWt5VmtWU2JXeFlaV3RWTTFSWWNGZGtSV3hKWlVkT2FXSnVaRzVUVlZvMFRrVXhXRk50U2s1V1NFNDJWR3BKZDJSc1ozaFBWMXBOVFZSb01sUkVSVFJrYkdoSFpVZGFXV1ZVYkcxVVNHeENXakJzUjJWSFRsbGxXR1J1VkVoc1Fsb3diRVJQVjFwWlRWUnNiVlJJYkVOWk1sWkZVbTFzV0dWclZUTlVXSEJYWkVWc1NXVkhUbWxpYm1SdVUxVk9RbG93YkVkbFJGSk9WakJ3YVZSV1VucGxhelI1VFVka1NsRXdSbTVUVlU1Q1dqQnNSRkZYWkVwUk1FWnVVMVZPUW1Sc1ozaFBWMXBOWlZWR2JsTlZUa0phTUd4SFpVUlNUbFl3Y0dsVVZsSjZaV3MxV0UxSFpFcFJNRVp1VTFWT1EwOUdhRWhPVjA1c1VrVmFjRll6Y0VaT01ERTJWbTVTVFZWNlFqQlVSazEzWkVWNFZFMUlVazFWZWtJd1ZFWk5kMlJGZUZSTlNGSk5WWHBDTUZSR1RYZGtSWGhVVFVoU1RWVjZRakJVUmsxM1pFVjRWRTFJVWsxVmVrSXdWMFZqTVZreVZrVlNiV3hZWld0Vk0xUlljRWRrUmtKd1VXMU9iRkpGV25CV00zQkdUakF4TmxSdVVsSlhSbGwzV1ZWak5XVlZiRWRsUkZKT1ZqQndhVlJXVW5wbGF6RllUVWRrU2xKSE9XNVhSV2h1WlVac2MyTXphRkJsYXpFMldXeFdUMDVXYkhSV2JteEtVbGhvYjFsc2FFTk5WMHAwV2tkT2JGSkZXbkJXTTNCR1RqQXhObEp1VWtwU1JGWnFXbFZTUjJGV1pEWlNWR1JPWldzMU1GWnJaRWRrVm05NVdrZG9hVmRHV2paVFZWbzBaRlpvU1ZvemFGcGlTRTQwVkROd1RtVkhTbFZPVjA1c1VrVmFjRll6Y0VaT01ERTJWRzVTU2xKV2NHOVhWRXBYWVZkSmVVOVlTa3BTYm1jd1ZGWmtTMWxyTVZWak0zQk9WbnBCTWxkRmFHNWxSbXh6WXpOb1VHVnJNVFpaYkU1RFlsWnNXRlJ0ZUZwaVZHd3lXVmhyTVdGdFNYbE5TRnBxWWxSc01GbFdUVEZsVjBaWlkwZG9hVkY2VVhoVU1GbzBaRlpvU1ZvemFGcGlTRTQwVkROd1RtVkhTbFZPUjJSWlUwZGtORmRYZUhwbFJUazJWRmh3YVZaWFVuZGFSV1J2VFZac2NGRnRUbXhTUlZwd1ZqTndSazR3TVRaU2JsSktVVEJGTWxOVldqUk9SVEZZVTIxS1RsWklUalpVVkVsNFltMUdXVlZ0T1d0V01Hd3hWMVJKTldSRmQzaFRiRUpWVmxkME1GVldWbUZWTVdSeVpVZE9hV0pJWnpCVVZtUkxXV3N4VldNemNFOVdla0l3VkVaTmQyUkZlRlJOU0ZKTlZYcENNRlJHVFhka1JYaFVUVWhTVFZWNlFqQlVSazEzWkVWNFZFMUlVazFWZWtJd1ZFWk5kMlJGZUZSTlNGSk5WWHBDTUZSR1RYaFpNa3B6WlVoV1dWTkhaRFJYVjNoNlpVVTVObFJVUm1sV2JrNXVWMFZvYm1WR2JITmpNMmhRWldzd2VsbHNWbGRrVm10NlUycFdhbE5HUm01Wk1HaHpUVWRHU0U5WVZrNWhWVXBxV2xWU1IyRldaRFpTVkdST1pXeGFNRmRHVGtKYU1HeEVVVmRrU2xORk5XcGFWVkp6WVRGb1NWb3paRTVpU0djd1ZGVlNRMWt5VmtWUldHUlpVbnBXYWxwVlVrZGhWbVEyVWxSa1VGWkhVakJXZWtZMFRrVXhXRk50U2s1V1NFMHhWRlJKZDJRd01WZGxSRkpPVmpCd2FWUldVbnBPVlRSNVRWZFNTbEpXV2pGWFZFNUxUbGRPU1ZWdFRteFNSVnB3VmpOd1JrNHdPVlZVYmxKS1VsUkdiMWt5TlU5aU1XeFlaVWRPYVdKSVp6QlVWbVJMV1dzeFZXTjZWazlOYWtacFYwVm9ibVZHYkhOak0yaFFaVzEwTmxsc1VrSmxWbWhKV2pOb1dtSklUalJVTTNCeVRUSktWMDFIWkZOV2VsWnhXVEkxYzJReVVrUlJiVTVzVWtWYWNGWXpjRVpPTURsVlZHNVNVbUpWV2paWGJGSmFUVVpvU0U1WFRteFNSVnB3VmpOd1JrNHdPVlZhU0ZKWVRWaG5NRlJXWkV0WmF6RlZZM3BXVGsxcVFqTlVWRVkwVGtVeFdGTnRTazVXU0UweFZHcEplRnBGYkVaV2JsWmFUVEJ2TVZrd2FGTlpNbFpGVW0xc1dHVnJWVE5VTVZKUFpFVnNSbE50YUdwTmJGWTJWRmQ0TkdSV2FFbGFNMmhhWWtoT05GUXpjSEpOTWtwWFpFZE9iRkpGV25CV00zQkdUakE1VlZSdVVrNVNSa3BxV2xWU1IyRldaRFpTVkdSUVZrZFNNRmRHVGtOU2JVcDBWRzVzYkZkRlNYZFRWVm8wVGtVeFdGTnRTazVXU0UweFZGUkplRkV4YkZsVWJYaE9Wa1p3YWxsdGVEUk9SVEZZVTIxS1RsWklUVEZVYWtsNFdXeG9TVm96YUZwaVNFNDBWRE53Y21WdFNsVlJWRVpaVTBka05GZFhlSHBsUlRrMllYcE9hVlpxUW01VmJHTXhZVzFPZFdKSVpHdFJNRXBxV2xWU1IyRldaRFpTVkdSUVZrVTFNRll5TVRSalJteHpaVWhXV1ZOSFpEUlhWM2g2WlVVNU5tRjZUbWxXYmxKcVdsVlNSMkZXWkRaU1ZHUlFWa1UxTUZSVlVtRlpNbFpGVW0xc1dHVnJWVE5VTVZKclpFWm9WRkZyV21saVZUVTFXbFpvUTAxRmJFZGxSRkpPVmpCd2FWUldVbnBPVlRCNVRWWkdiRlV3U21wYVZWSkhZVlprTmxKVVpGQldSVm93VlVkc1Exa3lWa1ZTYld4WVpXdFZNMVF4VWs5a1JsWkpZa2R3V1ZKNlZtcGFWVkpIWVZaa05sSlVaRkJXUjFJd1ZucEdORTVGTVZoVGJVcE9Wa2hOTVZSVVNYZGtNRFI0WlVSU1RsWXdjR2xVVmxKNlRsVTBlVTFYVWtwU1Zsb3hWMVJPUzA1WFRrbFZWMlJaVTBka05GZFhlSHBsUlRrMllUTndhVlpVUm05Wk1qVlBZakZzV0dWSFRteFNSVnB3VmpOd1JrNHdNVFpTYmxKTlVtNW5NRlJXWkV0WmF6RlZZek53VGsxcVJtaFphMlJ6WVZab1NWb3phRnBpU0U0MFZETndUbVZIU2xSbFIwNXNVa1ZhY0ZZemNFWk9NREUyVkc1U1VtSlZXalpYYkZKYVRVWm9TRTVYVG14U1JWcHdWak53Ums0d09WVmFTRkpZVFZobk1GUldaRXRaYXpGVlkzcFdUazFxUWpOVU1GbzBUa1V4V0ZOdFNrNVdTRTB4VkdwSmVGcEZiRVpXYmxaYVRUQnZNVmt3YUZKYU1XaEpXak5vV21KSVRqUlVNM0J5WlcxS1ZrMVhhR3BpYXpWMlYxWmtORmt5VmtWU2JXeFlaV3RWTTFSWWNFZGtSWGhIWlVSU1RsWXdjR2xVVmxKNlpXc3dlVTFYUm1sU01uaHdWMFZvYm1WR2JITmpNMmhRWldzeE5GbHNUalJaTWxaRlVtMXNXR1ZyVlROVVdIQlBaRVpHZEZKdWNHRldSVEUxVjBWak1Wa3lWa1ZTYld4WVpXdFZNMVF4VW10a1JtTjRaVVJTVGxZd2NHbFVWbEo2VGxVd2VVMUlaRkJXYm1jd1ZGWmtTMWxyTVZWamVsWlBUV3BHYTFOVlZsZGtWbXQ2VTJwV2FsTkdSbTVYUldodVpVWnNjMk16YUZCbGJYUTJXV3hWZUdGSFRuVlViVGxhVmpOb2FscFZVa2RoVm1RMlVsUmtUbVZyV2pCVVJWbzBUa1V4V0ZOdFNrNVdTRTQyVkZSSmVGbFhTa2hpUjJ4WlUwZGtORmRYZUhwbFJUazJWRmhvYVZVemFHcGFWVkpIWVZaa05sSlVaRTVsYXpVd1ZWY3hSMlZzY0ZWU1ZFcFpVbnBXYWxwVlVrZGhWbVEyVWxSa1VGWkhVakJXZWtZMFRrVXhXRk50U2s1V1NFMHhWRlJKZDJWRk1VZGxSRkpPVmpCd2FWUldVbnBPVlRSNVRWZFNTbEpXV2pGWFZFNUxUbGRPU1ZWWFpGbFRSMlEwVjFkNGVtVkZPVFpoTTNCcFZtNUNlbGxXWkV0Wk1sWkZVbTFzV0dWclZUTlVXSEJIWkVWNFIyVkVVazVXTUhCcFZGWlNlbVZyTUhsTlZVNWFWMFUxYzFSdGNGTlpNa3B6WlVSU1RsWXdjR2xVVmxKNlRsVTBlVTFYU2xsVFIyUTBWMWQ0ZW1WRk9UWmhNMmhwVmtWR00xZEZhRzVsUm14ell6Tm9VR1Z0YzNwWmJGbDNXakZLV1dGSVFtdFNibWd4V1ROck5Wa3lWa1ZSV0dSWlUwZGtNMVJWV2pST1JURkZVV3BTWVZJeVRqQlphazVEWWtkS2NGRnRPV3RUUmtveldUTndkbVJyZDNwYVJFNXJaVlJXZEZkV1pFOWlSbXgwVDFoYWFHVlVWbkZaYWtsM1pHMU9kRTlZVW1oVmVsWTFXVlpvZDJGSFNrUk9SRVpRVTBaS2FscFZVa0pOVm1oSldqTmtUbEp1WnpCVVZWSkRXVEpXUlZGWVpGcE5ibWh6VjFab1MyVnJjRmRsUkZKT1VrVkthbHBWVWtKa01XaEpXak5rVGxKdVp6QlVWbVJMV1dzeFZXTjZWazVXZWtacFYwVm9ibVZHYkhOak0yaFFaVzEwTmxsc1VUVlpNbFpGVW0xc1dHVnJWVE5VTVZKSFpFWm9WRkZ0VG14U1JWcHdWak53Ums0d09WVmFTRkpXVWpKNGVsbFdaRzlsYkdoSldqTmtUazFZWnpCVVZWSkRXVEpXUlZGWVpGbFRSMlF6VkZWT1Frc3diRWxWYlU1c1VrVkdORmRGYUc1a01ERkhaVVJTVGxKRlNtcGFWVkpDWkRBeFdWVnRUbXhTUlVZMVYwVm9ibVF3TVVkbFJGSk9Va1ZLYWxwVlVrSmtNREZGVW01d1dWSjZWbXBhVlZKQ1pERm9TVm96WkU1U2JtY3dWRlZTUTFreVNuSlhia0pwVWpGV2JsWkhNVWRrUm5CWlZHMU9iRkpGVmpOWFJXaHVaREF4UjJWRVVrNVNSVXBxV2xWU1FtUXhVWHBXYWtKcVUwWlpkMU5WVm1GalIwcElWbGRrVldKVldqQlhiR2hQV1RKV1JWRnRlRmxUUjJRelZGVmFORTVGTVVWUmJVNXNVa1ZHTTFWc1l6RmhiVTUxWWtoa2ExSXllREZYYm14Q1pGVjRjRTVVUWxsVFIyUXpWRmQ0TkU1Rk1VVlJiVTVzVWtWR00xZEZhRzVrTURGSVZXMDFhMUp1WnpCVVZWSlRXVEpXUlZGWVpGbFRSMlF6VkZWYU5FNUZNVVZSYlhoc1VqRmFjVmw2UmpSWk1XaEpXak5rVGxKdVp6QlVWVkpEV1RKV1JWRllaRXBOUmxveFYxUk9TMDVYVGtsVlYyUlNZbTEwYmxaWE1EVmtSMFpVVVd0S1lXSnJjSGRhVnpGSFl6QnNSR0ZIT1d0VFJrb3pXVE53ZG1ScmQzbGFTRUpyVWpKbmVGZFhhekZoYlVsNVRVaGFWbUY2YkU5Vk1VMTRVV3hLYzFOdFJsVlJNbmhxV1cxNE5HUlhSbGhOV0dScFRUQnZkMU5WWTNoaFIwNTFWRzA1V2xZemFHcFpiVEZYVGtad1dGUlhPV2xXTUZvMVdYcEtiMkZIU2tST1dFNXBUV3RhY2xremJHOWxiR2hKV2pOa1RtSklaekJVVlZKRFdUSldSVkZZWkZsVFIyUXpWRlZPY21OSFVrZGxSRkpPVWtWYWFscFZVa0prTVdoSldqTmtUbEp1WnpCVVZWSkRUVEpHVjJWRVVrNVNSVFZxV2xWU1FtUXhhRWxhTTJST1VtNW5NRlJWVWtObGJHaEpXak5vVDAxWVp6QlVWVkpEV1RKV1JWRllaRmxUUjJRelZGVldWMlJXYTNwVGFsWnFVMFpLZDFscVNUQmFNVVY1VDFoU2FsSXphSE5hUldSWFlUQjRjRTVJVm1wTldHY3dWRlpTVDFreVZrVlJXR1JaVTBka00xUlZXalJPUlRGRlVXeENhMWRHU2pOYVJtaFNXakZLZEdKSVRtRlZNRXBRVjFaamVHSkZiRVZpTW1SclVtNW5NRlJWVWtkWk1sWkZVVmhrV1ZOSFpETlVWVm8wVGtVeFJWRlliR3RTYm1jd1ZGVlNTMWt5VmtWUldHUlpVMGRrTTFSVldqUk9SVEZGVVZoa1RtSnJOVzFYUldodVpEQXhSMlZFVWs1U1JVcHFXbFZTUW1Rd2EzZFdibFphVFRCdk1Wa3dhRkphTVVaMVlUSmtWbUpVYkRCWlZrNURVV3h3ZFZOdVFteGlWVnA2VTFWT2IySXlVa2xWYm1ScVpXMDVNbFJFU210alIxSklZVVJHV21GVVZuRlpha2wzWkd4V2NrOVZOVlJWZWtaRFZXMTRTMWxXVWtSaVIwNXBZa2hvTVZsV1kzaGtNa2w2VTJwQ1NsSXdjRzlaZWtwV1RXczFSMlZJVm1GWFIyaHpWMWhzYjJGV2JGbFViWGhQWVd4R01WZFhjRnBOUm5CSVZtMXdhVTFzU25OVE1Gb3pZbTFOZUdWRVVrNVNSVFZxV2xWU1FtUXhhRWxhTTJST1VtNW5NRlJWVWtOWk1IQTFZVE5DYTFKdVp6QlVWVkpIV1RKV1JWRllaRmxUUjJRelZGVmFORTVGTVVWUldIQnJVbTVuTUZSVlVrdFpNbFpGVVZoa1dWTkhaRE5VVlZvMFRrVXhSVkZZWkU1Tk1EVnRWMFZvYm1Rd01VZGxSRkpPVWtWS2FscFZVa0prTUd0M1ZtNVdXazB3YnpGWk1HaFNXakZHZFdFeVpGWmlWR3d3V1ZaT1ExRnNjSFZUYmtKc1lsVmFlbE5WVG05aU1sSkpWVzVrYW1WdE9USlVSRXByWTBkU1NHRkVSbHBoVkZaeFdXcEpkMlJzVm5KUFZUVlVWWHBHUTFWdGVFdFpWbEpFWWtkT2FXSklhREZaVm1ONFpESkplbE5xUWtwU01IQnZXWHBLVm1Wck1YTmxTRlpoVjBkb2MxZFliRzloVm14WlZHMTRUMkZzUmpGWFYzQk9aVlp3U0ZadGNHbE5iRXB6VXpCYU0ySnRUWGhsUkZKT1ZrZG9hbHBWVWtKa01XaEpXak5rVGxKdVp6QlVWVkpEV1RKS2NsWnVWbHBOTUc4eFdUQm9VMk5IU1hsT1IyUlNUV3BzTUZrd1pEUmlSMUpJVm0xMFRXRlVVakZhUlZvMFRrVXhSVkp0VG14U1JVWXpWMFZvYm1Rd01VZGxSRkpPVWtWRmQxcEZXalJPUlRGRlUyMU9iRkpGUmpOWFJXaHVaREF4UjJWRVVrNVNSVVl6Vkd0b1QxcHNhRWxhTTJST1VtNW5NRlJWVWtOWk1sWkZVVmhrU2sxR1dqRlhWRTVMVGxkT1NWVlhaRkppYlhSdVZsY3dOV1JIUmxSUmEwcGhZbXR3ZDFwWE1VZGpNR3hFWVVjNWExTkdTak5aTTNCMlpHdDNlVnBJUW10U01tZDRWMWRyTVdGdFNYbE5TRnBXWVhwc1QxVXhUWGhSYkVwelUyMUdWVkV5ZUdwWmJYZzBaRmRHV0UxWVpHbE5NRzkzVTFWa1MyRkhUWGxXV0doUFlraG9NVmRzYUc5aVJtdzFZVWRzV2xkRk5YTlViWEJTWkZac2NWSlVTbUZTTVZweFdXcEtVMkpGZEVka01qVnJVbTVuTUZSVlVrZFpNbFpGVVZoa1dWTkhaRE5VVlZvMFRrVXhSVkZVUm10U2JtY3dWRlZTUzFreVZrVlJXR1JaVTBka00xUlZXalJPUlRGRlVWaGtUMWRGTldoWFJXaHVaREF4UjJWRVVrNVNSVXBxV2xWU1FtUXdhM2RXYmxaYVRUQnZNVmt3YUZKYU1VWjFZVEprVm1KVWJEQlpWazVEVVd4d2RWTnVRbXhpVlZwNlUxVk9iMkl5VWtsVmJtUnFaVzA1TWxSRVNtdGpSMUpJWVVSR1dtRlVWbkZaYWtsM1pHeFdjazlWTlZSVmVrWkRWVzE0UzFsV1VrUmlSMDVwWWtob01WbFdZM2hrTWtsNlUycENTbE5JUW5wWlZtUkxXVEpLZEZacVVtRldNREYyV2xjeE5HTkdiSEJPVjNCcFRXcEdNMWt5TVZkbGJVNDFZVWRPUzAweFNtcGFWVkpDWlVab1NWb3paRTVTYm1jd1ZGVlNRMWt5VmtWUldHUlBZbXhLYWxwVlVrSmxWbWhKV2pOa1RsSnVaekJVVlZKRFdUSldSVkZZWkU1U1JteDJWMFZvYm1Rd01WZGxSRkpPVWtWS2FscFZVa0prTVdoSldqTmtUbE5HU21wYVZWSkNUVEZvU1ZvelpFNVNibWN3VkZWU1Exa3lWa1ZSV0dSYVRXcHNNRmt3WkhOak1YQlpWVzFPYkZKRlJqUlhSV2h1WkRBeFIyVkVVazVTUlVwcVdsVlNRbVF3TkhwVmJVNXNVa1ZHTlZkRmFHNWtNREZIWlVSU1RsSkZTbXBhVlZKQ1pEQXhSVnBJY0ZsVFIyTXdWMVphTkU1Rk1VVlJiVTVzVWtWR00xZEZhRzVrTURGRVZHdGFhV0pWTlRWYVZtaERUVVZzUmxOcVZrcFNhM0F5V1d4a2Nsb3hSbGhYYm14b1YwaENiMWxyVGtKaU1rWkpWV3BDYWxORk1ESlVTR3MxWW0xR1dWVnRPV3RXTUd3eFYxUkpOV1JGZDNoVGJFSlZWbGQwTUZWV1ZtRlZNV1J5WkROQ1dWSjZWbXBaYlRGelpFZE9TRTlZYkd0Uk1Fb3dWMVpvUzJWdFJraFNiazVOVTBoQ2VsbFdaRXBqTVd4MFVtNXdZVlpHYTNkWFJXTXhZa2RXU0ZadGNFeFNla1p2V1RJMVQySXhiRmhrTTFacFVucHNiMWRyYUU1aU1sWjBaVWhDV21GVVZuSlhiR1JQWkcxS1dWRnViR0ZYUlRVMlV6QmtTMkZIVFhsV1ZFcFBVWHBXY0ZSdGNGTmhNWEJZVkc1YVlWSXhWblpUVnpWUFdUSldSVkZVUmxsVFIyUXpWRlZhTkU1Rk1VVlJiVTVzVWtWR00xTlhiSEpqUlhSVVlrUkNXVk5IWkROVVZsbzBUa1V4UlZGdFRteFNSVVl6VjBWb2JtUXdNVVZoUkVKWlUwZGtNMVJYZURST1JURkZVVzFPYkZKRlJqTlhSV2h1WkRBeFJWRlVVbXBOV0djd1ZEQmtSMWt5VmtWUldHUlpVMGRrTTFSVldqUk9SVEZGVVZkd1UxWjZWbkZaTWpWelpESlNSRkZyVG14Vk1FcFVXV3BKZUdORmJFWlNiVEZxWWxkM01sZFdaRE5hTUhSSVlVUkNhMU5GU2paVU1tczBaR3h2ZVdKRVFtaFRSbHB3VkVjeFQyUnRTbFJQVms1VlRVUkdTMVJHVmtkU01WWnpZMFV4VEZadWFERlhSV014WTBkS1dWRnVXbXBpYkVadVdXeGtSMlZYVFhsaFIyaHBVVE5uTWxsclpITmhWWGhJVTIxb2FrMXNWWGxVYTFvMFpGWndXV0ZIZUZwbFYyZ3dWMVpvUzJWdFJraFNiazVOWWxob01sZFdaRk5sYTNSSlkwaE9hRll3YkRGWGEyUlhZVzFKZVUxWVpHcGlWbG8yV1ROc2IyRldiRmxVYlhoUFlXeEdNVmRYY0U1bFZuQklWbTF3YVUxc1NuTlRNRTVMVFVab1NWb3paRTVXYm1jd1ZGVlNRMWt5VmtWUldHUlpVMGRrTTFSVlVuTk5SbWhKV2pOa1RtSklaekJVVlZKRFdUSldSVkZZWkZsVFIyUXpWRlZTUWs1WFRYaGxSRkpRVWpCYWFscFZVa0prTVdoSldqTmtUbEp1WnpCVVZWSkNZV3hLV0U1WGNHcGliWGd6V2tWT1ExRXlWbFJSYkU1cFRXcEdkMU5WVmtkaVYwNTBZa1JhV2xZelpHNVRNR1J2VFVkU1NWRnVjRkJoVkdneVYycEtjMDFIUmtsV2JXeE5ZbFUxTWxsc1RUVlZNVkYzVFZWd1RWWlZXa2hXVjNoM1ZGVjBWMlZJVmxsU2VsWjNXV3hvUTJSdFRuVlZWMlJwVmpCYU5WbDZTbTloUjBwRVpVUmFhVkl5ZUhCVVJXUkxZVWROZVZaVVNrOVNibWd4VjJ4b2IySkdiRFZoU0ZKYVYwVndObGxWWkVkak1IaDBaVWhhV2xZeFNqWlRNR2gzWXpKR1dGTllWbUZTTVZweFdXcEplR1F5VG5SV2JuQnFaVmRvY0ZkV2FFOWlSVFZ4VlZoV1dtRnJWWGxYYTJSWFlXMUplVlZ0ZUV4Uk1HOTNWMFZvYm1Rd01YTmxSRkpPVWtWS2FscFZVa0prTVdoSldqTmtUbEpGVmpOWmVrNVRXVEpXUlZGWVpGbFRSMlF6VkZWYU5FNUZNVVZSVjNCVFZucFdjVmt5TlhOa01sSkVVV3RPYkZVd1NsUlpha2w0WTBWc1JsSnRNV3BpVjNjeVYxWmtNMW93ZEVoaFJFSnJVMFZLTmxReWF6UmtiRzk1WWtSQ2FGTkdXbkJVUnpGUFpHMUtWRTlXVGxWTlJFWkxWRVpXUjFJeFZuTmpSVEZNVm01b01WZEZZekZqUjBwWlVXNWFhbUpzUm01YVZ6RTBZMFpzY0dWSGJGcFhSVFZ6Vkcxd1Uxa3lTblJXYWxKaFZqQXhkbHBYTVRSalJteHdUbGQwWVZZd05USlpiR2hEWlZad1dWUnVjRXhTTUhCdldYcEtWazFyTlVST1YyeFBZV3hLY2xkc1pFOWtiSEJJVmxjNVNtSnJOV3BhVlZKQ1RVWm9TVm96WkU1U2JtY3dWRlZTUTFreVZrVlJXR1JLWVZkMGQxTXhUbTVrVm1oSldqTmtUbEp1WnpCVVZWSkRXVEpXUlZGWVpHdFNibWN3VkZWU1Mxa3lWa1ZSV0dSWlUwZGtNMVJWV2pST1JURkZVVzVhYWsxVmNHcGFWVkpDWkRGb1NWb3paRTVTYm1jd1ZGVlNRMWt5VmtWUldHUldZa2huTUZSVlVsTlpNbFpGVVZoa1dWTkhaRE5VVlZvMFRrVXhSVkZxUWxsVFIyUXpWRzE0TkU1Rk1VVlJiVTVzVWtWR00xZEZhRzVrTURGSVUyMW9hazFzVlhsVWEyaFRXVEpXUlZGVVRsbFRSMlF6VkZWYU5FNUZNVVZSYlU1c1VrVkdNMWxzWkVkbFYwMTVZVWRvYVZOR1NtcGFWVkpDVFVab1NWb3paRTVTYm1jd1ZGVlNRMWt5VmtWUldHUnNZbGhvZDFkWE5WTlpNbFpGVVZSU1dWTkhaRE5VVlZvMFRrVXhSVkZ0VG14U1JVWXpWMWN4YzJSV2JGbFViWEJvVmpKM2QxZEZZekZaTWxaRlVWaGtXVk5IWkROVVZWbzBUa1V4UlZGdVpHeFdhbXh4V1dwSmVHUXlSbGhsUjNoclVtNW5NRlJWVWtkWk1sWkZVVmhrV1ZOSFpETlVWVm8wVGtVeFJWRnNUbXRTYm1jd1ZGVlNSMWt5VmtWUldHUlpVMGRrTTFSVldqUk9SVEZGVVd0b2ExSnVaekJVVlZKSFdUSldSVkZZWkZsVFIyUXpWRlZhTkU1Rk1VVlJiSEJyVW01bk1GUlZVa2RaTWxaRlVWaGtXVk5IWkROVVZWbzBUa1V4UlZGclRtdFNibWN3VkZWU1Ixa3lWa1ZSV0dSWlUwZGtNMVJWV2pST1JURkZVV3RTYTFKdVp6QlVWVkpIV1RKV1JWRllaRmxUUjJRelZGVmFORTVGTVVWUmJHaFdZa2huTUZSVlpFdFpNbFpGVVZoa1dWTkhaRE5VVlZvMFRrVXhSVkZzVGxsVFIyUXpWMVJHTkU1Rk1VVlJiVTVzVWtWR00xZEZhRzVrTURGSlZXMU9iRkpGUlhkWFJXaHVaREF4UjJWRVVrNVNSVXBxV2xWU1FtUXlTa2hQVnpWcFRURkthbHBGV2pST1JURkZVVzFPYkZKRlJqTlhSV2h1WkRBeFNWTnVXbWxXTW5odlYyMDFTMDV0U2tsVmJVNXNVa1ZGZVZkRmFHNWtNREZIWlVSU1RsSkZTbXBhVlZKQ1pESk5lbUpJY0d0U01Wb3dXa1ZhTkUxR2FFbGFNMlJPVW01bk1GUlZVa05aTWxaRlVWaGthbUpWV1hwWFJFcHpaRmRPU1ZacVFtdFNibWN3VkZWU2Ixa3lWa1ZSV0dSWlUwZGtNMVJWV2pST1JURkZVVzVTV2xZeWVERlpiR1JYWkZkU1dWVnRUbXhTUlVWM1YwVm9ibVF3TVVkbFJGSk9Va1ZLYWxwVlVrSmtNWEIwWWtoT1lWWnJjR3BaYlhnMFRrVXhSVkZ0VG14U1JVWXpWMFZvYm1Rd01VbFZiVTVzVWtWRmQxZEZhRzVrTURGSFpVUlNUbEpGU21wYVZWSkNaREpKZWxGdGVHbGliRXBxV2xWU1FrMUdhRWxhTTJST1VtNW5NRlJWVWtOWk1sWkZVVmhrYW1KV1dtOVhhMmhUV1RKV1JWRlVVbGxUUjJRelZGVmFORTVGTVVWUmJVNXNVa1ZHTTFkdE1YTmpNWEJZVDFoa1lWWjZWbFJYUldodVpVWndSMlZFVWs1U1JVcHFXbFZTUW1ReGFFbGFNMlJPVTBaS2FscFZVa0psUm1oSldqTmtUbEp1WnpCVVZWSkRXVEpXUlZGWVpGcFhSa3BxV2xWU1FrMVdhRWxhTTJST1VtNW5NRlJWVWtOWk1sWkZVVmhrWVZOR1dqQlpNR2hQVFVab1NWb3paRTVXYm1jd1ZGVlNRMWt5VmtWUldHUlpVMGRrTTFSVlkzaE5SbWhKV2pOa1QxSnVaekJVVlZKRFdUSldSVkZZWkZsVFIyUXpWRlZvUzJKSFRrbFRiRTVaVTBaS2FscFZVa0prTVdoSldqTmtUbEp1WnpCVVZWSkRUVVpvU1ZvelpFNVdibWN3VkZWU1Exa3lWa1ZSV0dSWlUwZGtNMVJWWkV0TlJtaEpXak5rVGxadVp6QlVWVkpEV1RKV1JWRllaRmxUUjJRelZGVmtVMVV4YUVsYU0yUk9Za2huTUZSVlVrTlpNbFpGVVZoa1dWTkhaRE5VVldoVFdUSldSVkZVUmxsVFIyUXpWRlZhTkU1Rk1VVlJiVTVzVWtWR00xZFVTalJrYlUxNVZteE9XVk5IWkROVWJGbzBUa1V4UlZGdFRteFNSVVl6VjBWb2JtUXdNVWxWYlU1clVtNW5NRlJWVWtOWk1sWkZVVmhrV1ZOSFpETlVWV1JLVFdzMVNGWnVWbHBOYW14eVYyeG9VMWt5VWtkbFJGSk9Va1ZLYWxwVlVrSmtNV2hKV2pOa1RsSXdiRFpVVnpGWFpGWnJlVTlYZEdGWFJrcHFXa1ZhTkU1Rk1VVlJiVTVzVWtWR00xZEZhRzVrTURGSVUxaG9UMkpXV2pGWFZFazFZVEZ3V1ZWdFRteFNSVVV3VjBWb2JtUXdNVWRsUkZKT1VrVkthbHBWVWtKa01XdDVUMWhTYWxORmNITlplazVQVFVab1NWb3paRTVpU0djd1ZGVlNRMWt5VmtWUldHUlpVMGRrTTFSVmFFOWhSMUpIWlVSU1RsSkZjR3BhVlZKQ1pERm9TVm96WkU1U2JtY3dWRlZTUTJWc2JIVlZiVTVzVWtWR05WZEZhRzVrTURGSFpVUlNUbEpGU21wYVZWSkNaREpOZVZScVFsbFRSMlF6VkZkNE5FNUZNVVZSYlU1c1VrVkdNMWRGYUc1a01ERkpWRzEwYTFKdVp6QlVWVkpQV1RKV1JWRllaRmxUUjJRelZGVmFORTVGTVVWUmJuQnJVMFZzZGxkRmFHNWtNREZIWlVSU1RsSkZTbXBhVlZKQ1pERm9TVm96WkU1Uk1taHFXbFZTUW1ReGFFbGFNMlJPVW01bk1GUlZVa05aTWxaRlVWaGtURkp1WnpCVVZWSkRXVEpXUlZGWVpGbFRSMlF6VkZWYU5FNUZNVVZSYm5CWlUwZGtNMVJYZURST1JURkZVVzFPYkZKRlJqTlhSV2h1WkRBeFNGVnROV3RTYm1jd1ZGVlNiMWt5VmtWUldHUlpVMGRrTTFSVldqUk9SVEZGVVZSb2FWWjZiSEphUm1RMFlrWkNjMlZFVWs1U1JuQnFXbFZTUW1ReGFFbGFNMlJPVW01bk1GUlZVa05sYkZaelpVUlNUbEpGV21wYVZWSkNaREZvU1ZvelpFNVNNRXBxV2xWU1FtVkdhRWxhTTJSUFlraG5NRlJWVWtkWk1sWkZVVlJLV1ZOSFpETlVWbG8wVGtVeFJWZHRUbXhTUlVZMFYwVm9ibVF3TlhObFJGSk9Va1ZhYWxwVlVrSk5iR2hKV2pOa1RsWnVaekJVVlZKaFdUSldSVkZZYkZsVFJrcHFXbFZTUTJGV2FFbFZiVTVzVWtWRmVsZEZhRzVrTURWelpVUlNUbEpGV21wYVZWSkNUV3hvU1ZvelpFNVdibWcxVjBWb2JtUXdNVmRsU0d4WlUwZGtNMVJXV2pST1JURkZWbTFPYkZKRlJqUlhSV014V1RKV1JWRllhRmxUUjJRMFYxUkdORTVGTVVWU2JVNXNVa1ZWTUZkRmFHNWtNREZYWlVSU1RsWXdOV3BhVlZKQ1pVWm9TVm96YUZwTldHY3dWRlZTUjFreVZrVlJiWGhaVTBka00xUldXalJPUlRGVlUyMU9iRkpGUmpSWFJXaHVaVVV4YzJWRVVrNVNSVnBxV2xWU1EySldhRWxhTTJST1ZtNW5NRlJWWkU5Wk1sWkZVVmhvV1ZOSFpETlhiRm8wVGtVeFJWSnRUbXhTUlVwMFYwVm9ibVF3TVZkbFNHeFpVMGRrTTFSV1dqUmtWbWhKV2pOa1RsWnVhRFZYUldodVpEQXhWMlZFVWs1U01WcHFXbFZTUW1WR2FFbFRiVTVzVWtWR05GZEZhRzVsUlRGWFpVUlNUbEpGV21wYVZWSkNUa1pvU1ZvelpFNVdibWN3VkZaU2Ixa3lWa1ZSV0doWlUwZGtORmRVUmpST1JURkZVbTFPYkZKRlduRlhSV2h1WkRBeFYyVkVVazVTTVZwcVdsVlNRbVZHYUVsYU0yaE9Za2huTUZSVlVrZFpNbFpGVVcweFdWTkhaRE5VVmxvMFRrVXhTRlp0VG14U1JVWTBWMFZvYm1ReGNITmxSRkpPVWtWYWFsa3llRFJPUlRGRlVtMU9hV0pJWnpCVVZWSkhXVEpPYzJWRVVrNVNSVnBxV2xWU1EySkdhRWxhTTJST1ZtNW9OVmRGYUc1a01ERlhaVVJTVGxaRldtcGFWVkpDWlVab1NWb3paRkJTYm1jd1ZGVlNSMWt5VmtWU1ZGSlpVMGRrTTFSV1dqUk9SVEZZVkcxT2JGSkZSalJYUldodVpVWnJlR1ZFVWs1U1JWcHFXbFZTUTJKR2FFbGFNMlJPVm01bk1GUldVa3RaTWxaRlVWaG9XVk5IWkROWGJYZzBUa1V4UlZKdFRteFNSVXB6VjBWb2JtUXdNVmRsUkZKT1VqRndhbHBWVWtKbFJtaEpVMjFPYkZKRlJqUlhSV014V1RKV1JWRllhRmxUUlhCcVdsVlNRbVZHYUVsYU0yUmhWbTVuTUZSVlVrZFpNazV6WlVSU1RsSkZXbXBhVlZKR1pVWm9TVm96WkU1V2JtY3dWRlZTYjFreVZrVlJXR2haVTBka05GUXdXalJPUlRGRlVtMU9iRkpGV25GWFJXaHVaREF4VjJWRVVrNVdNRFZxV2xWU1FtVkdhRWxhTTJSaFZtNW5NRlJWVWtkWk1sWkZVbGhzV1ZOSFpETlVWbG8wVGtVeFNGZHRUbXhTUlVZMFYwVm9ibVF4Y0ZkbFJGSk9Va1ZhYWxwVlVrTmlWbWhKV2pOa1RsWnVhRFZYUldodVpEQXhWMlZJVmxsVFIyUXpWRlphTkdWV2FFbGFNMlJPVm01bk1GUlZaRmRaTWxaRlVWaG9XVk5GY0dwYVZWSkNaVVpvU1ZvemFFNVdibWN3VkZWU1Ixa3lWa1ZSVkZKWlUwZGtNMVJXV2pST1JURlZZVWRPYkZKRlJqUlhSV2h1WlVacmVHVkVVazVTUlZwcVdsVlNSMkZzYUVsYU0yUk9WbTVuTUZSVlpGZFpNbFpGVVZob1dWTkhaRFJVVjNnMFRrVXhSVkp0VG14U1JVcDBWMFZvYm1Rd01WZGxSRkpPVWpGYWFscFZVa0psUm1oSldqTmtZV0pJWnpCVVZWSkhXVEpPYzJWRVVrNVNSVnBxV1cxNE5FNUZNVVZTYlU1cVlraG5NRlJWVWtkWk1sWkZVVzE0V1ZOSFpETlVWbG8wWlZab1NWb3paRTVXYm1jd1ZGWlNSMWt5VmtWUldHaFpVMGRrTTFRd1dqUk9SVEZGVW0xT2JGSkZWVEJYUldodVpEQXhWMlZFVWs1V01EVnFXbFZTUW1WR2FFbGFNMmhPVW01bk1GUlZVa2RaTWtwelpVUlNUbEpGV21wYVZWSkRZa1pvU1ZvelpFNVdibWcxVjBWb2JtUXdNVmRsUkZKT1VrZG9hbHBWVWtKbFJtaEpXak5vVUZKdVp6QlVWVkpIV1RKV1JWSnRjRmxUUjJRelZGWmFORTVGTVZoVWJVNXNVa1ZHTkZkRmFHNWtNWEJYWlVSU1RsSkZXbXBhVlZKR1pWWm9TVm96WkU1V2JtY3dWRlpTUzFreVZrVlJXR2haVTBka00xZHRlRFJPUlRGRlVtMU9iRkpGU25SWFJXaHVaREF4VjJWRVVrNVNNWEJxV2xWU1FtVkdhRWxhTTJoUFVtNW5NRlJWVWtkWk1sWkZVVzB4V1ZOSFpETlVWbG8wWlZab1NWb3paRTVXYm1neFYwVm9ibVF3TVZkbFNHeFpVMGRrTTFSV1dqUk9SVEZJVm0xT2JGSkZSalJYUldoTFdUSldSVkZZYUZsVFIyUTBWRlphTkU1Rk1VVlNiVTVzVWtWRk1GZEZhRzVrTURGWFpVUlNUbFpIYUdwYVZWSkNaVVpvU1ZvemFGcE5XR2N3VkZWU1Ixa3lWa1ZTYlhCWlUwZGtNMVJXV2pST1JURklWbTFPYkZKRlJqUlhSV2h1WlVVeGMyVkVVazVTUlZwcVdsVlNSbVZXYUVsYU0yUk9WbTVuTUZSVlpHRlpNbFpGVVZob1dWTkhaRE5YYlhnMFRrVXhSVkp0VG14U1JVcDBWMFZvYm1Rd01WZGxSRkpPVmtaS2FscFZVa0psUm1oSldqTmtZV0pJWnpCVVZWSkhXVEpPYzJWRVVrNVNSVnBxV1cxNE5FNUZNVVZTYlU1cVlraG5NRlJWVWtkWk1sWkZVVzE0V1ZOSFpETlVWbG8wWlZab1NWb3paRTVXYm1jd1ZGWlNSMWt5VmtWUldHaFpVMGRrTTFRd1dqUk9SVEZGVW0xT2JGSkZWVEJYUldodVpEQXhWMlZFVWs1V01EVnFXbFZTUW1WR2FFbGFNMmhhVFZobk1GUlZVa2RaTWxaRlVXMTRXVk5IWkROVVZsbzBUa1V4VlZOdFRteFNSVVkwVjBWb2JtVkZNWE5sUkZKT1VrVmFhbHBWVWtOaVZtaEpXak5rVGxadVp6QlVWV1JoV1RKV1JWRllhRmxUUjJRelYyMTRORTVGTVVWU2JVNXNVa1ZWZDFkRmFHNWtNREZYWlVSU1RsSXhjR3BhVlZKQ1pVWm9TVk50VG14U1JVWTBWMFZqTVZreVZrVlJXR2haVTBWd2FscFZVa0psUm1oSldqTmtZVlp1WnpCVVZWSkhXVEpPYzJWRVVrNVNSVnBxV2xWU1JtVkdhRWxhTTJST1ZtNW5NRlJWVW05Wk1sWkZVVmhvV1ZOSFpETlhWRVkwVGtVeFJWSnRUbXhTUlZweFYwVm9ibVF3TVZkbFJGSk9WakExYWxwVlVrSmxSbWhKV2pOa1lWWnVaekJVVlZKSFdUSldSVkpZYkZsVFIyUXpWRlphTkU1Rk1VaFhiVTVzVWtWR05GZEZhRzVrTVhCelpVUlNUbEpGV21wYVZWSkRZa1pvU1ZvelpFNVdibWN3VkZWa1lWa3lWa1ZSV0doWlUwVndhbHBWVWtKbFJtaElUbGRPYkZKRlJqUlhSV2hMV1RKV1JWRllhRmxUUjJRelYyeGFORTVGTVVWU2JVNXFZa2huTUZSVlVrZFpNbFpGVWxob1dWTkhaRE5VVms1dldUSldSVkZZYkZsVFIyUXpWRlZhTkU1Rk1VVlJiVTVzVWtWR00xcEZXalJPUlRGRldrZE9iRkpGUmpOWFJXaHVaREF4UjJWRVVrNVNSVW93VjFab1MyVnRSa2hTYms1clVtNW5NRlJWVWxkWk1sWkZVVmhrV1ZOSFpETlVWVm8wVGtVeFJWRnVUbWxOYTFweVdUTnNiMWt5VmtWUldHUlpVMGRrTTFSVldqUk9SVEZGVVcxT2JGSkZSak5UTUZvMFRrVXhSVkZ0VG14U1JVWXpWMFZvYm1Rd01VZGxSRkpPVWtWR2RsZEZhRzVrTURGSFpVUlNUbEpGU21wYVZWSkNaREZvU1ZvelpFNVRSVFZxV2xWU1FtVldhRWxhTTJST1VtNW5NRlJWVWtOWk1sWkZVVmhrWVZJeVVYZFhSV2h1WkRBNVIyVkVVazVTUlVwcVdsVlNRbVF4YUVsYU0yUk9Va2hvTUZscVNsTk5WMHBJVmxOMFdWTkhaRE5VVkVZMFRrVXhSVkZ0VG14U1JVWXpWMFZvYm1Rd01VbFViVTVzVWtWR05WZEZhRzVrTURGSFpVUlNUbEpGU21wYVZWSkNaREZvU1ZvelpGcE5XR2N3VkZWU1JtSnJkRlJoZWpCdVMxTnJQU2NwS1E9PScpKQ=='))'))